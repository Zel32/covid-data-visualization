<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='COVIDDATADASHBOARD_17503340467340' path='/workbooks' revision='1.4' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (DeathsPerContinent)' inline='true' name='federated.0gdxfd10akshsc185pmuc0uidlrw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DeathsPerContinent' name='excel-direct.1dtwjlj1j56uni11nwcf711vgxbp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Edzel/OneDrive - University of the Philippines/Documents/NOTES/SQL/COVID SQL project/DeathsPerContinent.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1dtwjlj1j56uni11nwcf711vgxbp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B6BF6C459CE54D1CAC704FA85E692A93]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B6BF6C459CE54D1CAC704FA85E692A93]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B6BF6C459CE54D1CAC704FA85E692A93]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Edzel/AppData/Local/Temp/TableauTemp/#TableauTemp_1gfp0fk13l2xm116xdtei1o6hj2t.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2025 01:09:14 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' palette='orange_gold_10_0' type='palette'>
            <map to='#9e3a26'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c54923'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e2621f'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f3852a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f8aa4c'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Philippines&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_B6BF6C459CE54D1CAC704FA85E692A93'>
            <properties context=''>
              <relation connection='excel-direct.1dtwjlj1j56uni11nwcf711vgxbp' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (PercentInfectedPerCountry_TimeSeries)' inline='true' name='federated.14r1ltx0yreqx21e7luds109ejdy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PercentInfectedPerCountry_TimeSeries' name='excel-direct.0dbq67r1b3egy614x203o1gcc9kg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Edzel/OneDrive - University of the Philippines/Documents/NOTES/SQL/COVID SQL project/PercentInfectedPerCountry_TimeSeries.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0dbq67r1b3egy614x203o1gcc9kg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopnInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_102774ACCAE143C2B0EDFC53CD5F8E21]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_102774ACCAE143C2B0EDFC53CD5F8E21]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_102774ACCAE143C2B0EDFC53CD5F8E21]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_102774ACCAE143C2B0EDFC53CD5F8E21]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopnInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopnInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopnInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_102774ACCAE143C2B0EDFC53CD5F8E21]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Popn Infected' datatype='real' name='[PercentPopnInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_102774ACCAE143C2B0EDFC53CD5F8E21]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Edzel/AppData/Local/Temp/TableauTemp/#TableauTemp_1597yhk0t7tx2k11a07zt1mil75k.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2025 01:09:40 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1419</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17308</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopnInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopnInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopnInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28756</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Philippines&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_102774ACCAE143C2B0EDFC53CD5F8E21'>
            <properties context=''>
              <relation connection='excel-direct.0dbq67r1b3egy614x203o1gcc9kg' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopnInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (GlobalDeathPercentage)' inline='true' name='federated.16ilis00rw9mdl0zvwz3u0hsxz35' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GlobalDeathPercentage' name='excel-direct.1e4o5w91lfu08t1ey3c3t1cdeyry'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Edzel/OneDrive - University of the Philippines/Documents/NOTES/SQL/COVID SQL project/GlobalDeathPercentage.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1e4o5w91lfu08t1ey3c3t1cdeyry' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='TotalCases' ordinal='0' />
            <column datatype='integer' name='TotalDeaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_5E1C83ACEEAF4FE39A34CD9635EDA588]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_5E1C83ACEEAF4FE39A34CD9635EDA588]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_5E1C83ACEEAF4FE39A34CD9635EDA588]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_5E1C83ACEEAF4FE39A34CD9635EDA588]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Edzel/AppData/Local/Temp/TableauTemp/#TableauTemp_0x12hdq1dw853q15d4vdl0mwd0t0.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2025 01:08:58 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>TotalCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalCases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Philippines&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_5E1C83ACEEAF4FE39A34CD9635EDA588'>
            <properties context=''>
              <relation connection='excel-direct.1e4o5w91lfu08t1ey3c3t1cdeyry' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='TotalCases' ordinal='0' />
                  <column datatype='integer' name='TotalDeaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (PercentInfectedPerCountry)' inline='true' name='federated.1y9u5ca1o65ov610tbkbv10pwgpa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PercentInfectedPerCountry' name='excel-direct.1reokff0l7k97d1h58y5m11gr420'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Edzel/OneDrive - University of the Philippines/Documents/NOTES/SQL/COVID SQL project/PercentInfectedPerCountry.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1reokff0l7k97d1h58y5m11gr420' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopnInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F71A75F1B5B14C5A83C9830BF0D22D7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F71A75F1B5B14C5A83C9830BF0D22D7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F71A75F1B5B14C5A83C9830BF0D22D7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopnInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopnInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopnInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F71A75F1B5B14C5A83C9830BF0D22D7A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Popn Infected' datatype='real' name='[PercentPopnInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F71A75F1B5B14C5A83C9830BF0D22D7A]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Edzel/AppData/Local/Temp/TableauTemp/#TableauTemp_0reah7b0nu556i198bft21iwznbz.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2025 01:09:20 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet1_F71A75F1B5B14C5A83C9830BF0D22D7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_F71A75F1B5B14C5A83C9830BF0D22D7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_F71A75F1B5B14C5A83C9830BF0D22D7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopnInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopnInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopnInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_F71A75F1B5B14C5A83C9830BF0D22D7A]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Philippines&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F71A75F1B5B14C5A83C9830BF0D22D7A'>
            <properties context=''>
              <relation connection='excel-direct.1reokff0l7k97d1h58y5m11gr420' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopnInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_2099944D171C4EBFA4241286DEE548C9]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 4' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Sheet 4' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Total Cases and Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (GlobalDeathPercentage)' name='federated.16ilis00rw9mdl0zvwz3u0hsxz35' />
          </datasources>
          <datasource-dependencies datasource='federated.16ilis00rw9mdl0zvwz3u0hsxz35'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[sum:TotalCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[sum:TotalDeaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[sum:TotalCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[sum:TotalDeaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[:Measure Names]' value='127' />
            <format attr='height' value='34' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[Multiple Values]' value='N' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[sum:DeathPercentage:qk]' value='c#,##0.00&quot;%&quot;;(#,##0.00&quot;%&quot;)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ffcb8b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#bab0acc4' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.16ilis00rw9mdl0zvwz3u0hsxz35].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3C9D8132-C2C4-477E-B826-B1485198D4E5}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Death Count per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (DeathsPerContinent)' name='federated.0gdxfd10akshsc185pmuc0uidlrw' />
          </datasources>
          <datasource-dependencies datasource='federated.0gdxfd10akshsc185pmuc0uidlrw'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0gdxfd10akshsc185pmuc0uidlrw].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0gdxfd10akshsc185pmuc0uidlrw].[none:continent:nk]' value='96' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gdxfd10akshsc185pmuc0uidlrw].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='size' value='1.3073480129241943' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gdxfd10akshsc185pmuc0uidlrw].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0gdxfd10akshsc185pmuc0uidlrw].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{A5DD11F5-3CFD-4A8F-8524-4A93D75DAF51}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percentage of Population Infected per Country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (PercentInfectedPerCountry)' name='federated.1y9u5ca1o65ov610tbkbv10pwgpa' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1y9u5ca1o65ov610tbkbv10pwgpa'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Popn Infected' datatype='real' name='[PercentPopnInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopnInfected]' derivation='Sum' name='[sum:PercentPopnInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[Longitude (generated)]' field-type='quantitative' max='8133227.6278165318' min='-16914161.495681163' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[Latitude (generated)]' field-type='quantitative' max='12476134.713162009' min='3756198.5882614763' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[sum:PercentPopnInfected:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-orientation' field='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[sum:PercentPopnInfected:qk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[sum:PercentPopnInfected:qk]' max='20.0' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[sum:PercentPopnInfected:qk]' value='Percent Popn Infected&#10;'>
              <formatted-text>
                <run>Percent Popn Infected&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[none:Location:nk]' />
              <color column='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[sum:PercentPopnInfected:qk]' />
              <geometry column='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[none:Location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Percent Popn Infected:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[sum:PercentPopnInfected:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='size' value='0.69165748357772827' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[Latitude (generated)]</rows>
        <cols>[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C056B1BD-1255-47AE-8999-45E455BF5A0A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Monthly Percent Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (PercentInfectedPerCountry_TimeSeries)' name='federated.14r1ltx0yreqx21e7luds109ejdy' />
          </datasources>
          <datasource-dependencies datasource='federated.14r1ltx0yreqx21e7luds109ejdy'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Popn Infected' datatype='real' name='[PercentPopnInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopnInfected]' derivation='Avg' name='[avg:PercentPopnInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Max' name='[max:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14r1ltx0yreqx21e7luds109ejdy].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.14r1ltx0yreqx21e7luds109ejdy].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14r1ltx0yreqx21e7luds109ejdy].[none:Location:nk]</column>
            <column>[federated.14r1ltx0yreqx21e7luds109ejdy].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14r1ltx0yreqx21e7luds109ejdy].[avg:PercentPopnInfected:qk]' scope='rows' value='Avg. Percent Popn Infected (%)' />
            <encoding attr='space' class='0' field='[federated.14r1ltx0yreqx21e7luds109ejdy].[avg:PercentPopnInfected:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' minor-origin='0.0' minor-spacing='1.0' scope='rows' type='space' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-color' scope='rows' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14r1ltx0yreqx21e7luds109ejdy].[none:Location:nk]' />
              <text column='[federated.14r1ltx0yreqx21e7luds109ejdy].[avg:PercentPopnInfected:qk]' />
            </encodings>
            <label-data column='[federated.14r1ltx0yreqx21e7luds109ejdy].[max:date:qk]' />
            <customized-label>
              <formatted-text>
                <run>Æ&#10;</run>
                <run fontsize='10'><![CDATA[<[federated.14r1ltx0yreqx21e7luds109ejdy].[avg:PercentPopnInfected:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='left' />
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-mode' value='most-recent' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14r1ltx0yreqx21e7luds109ejdy].[avg:PercentPopnInfected:qk]</rows>
        <cols>[federated.14r1ltx0yreqx21e7luds109ejdy].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{1C02FD7B-3633-490B-9828-04660A1383B1}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4BC208AB-E3B5-4CB6-813B-8ADA002C7B0B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='1150' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='96970' id='22' param='horz' type-v2='layout-flow' w='98596' x='702' y='1515'>
            <zone h='96970' id='19' param='horz' type-v2='layout-flow' w='98596' x='702' y='1515'>
              <zone h='96970' id='13' type-v2='layout-basic' w='98596' x='702' y='1515'>
                <zone h='96970' id='8' param='horz' type-v2='layout-flow' w='37489' x='702' y='1515'>
                  <zone h='96970' id='6' type-v2='layout-basic' w='37489' x='702' y='1515'>
                    <zone h='23418' id='3' name='Sheet 1' w='37489' x='702' y='1515'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='56250' id='20' name='Sheet 4' w='37489' x='702' y='42235'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='17302' id='23' name='Sheet 4' pane-specification-id='0' param='[federated.14r1ltx0yreqx21e7luds109ejdy].[none:Location:nk]' type-v2='color' w='37489' x='702' y='24933'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='49642' id='12' name='Sheet 3' w='61107' x='38191' y='39520'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9323' id='16' name='Sheet 3' pane-specification-id='0' param='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[sum:PercentPopnInfected:qk]' type-v2='color' w='61107' x='38191' y='89162'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='38005' id='5' name='Sheet 2' w='61107' x='38191' y='1515'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='11' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97714' id='10' param='vert' type-v2='layout-flow' w='95734' x='2133' y='1143'>
                <zone fixed-size='270' h='39714' id='3' is-fixed='true' name='Sheet 1' w='95734' x='2133' y='1143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='39714' id='5' is-fixed='true' name='Sheet 2' w='95734' x='2133' y='40857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6A6E9FF3-571F-41D1-B66B-2E404A7F036D}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FDC78DAC-8455-4685-8D9C-EAB2E29CCE5F}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gdxfd10akshsc185pmuc0uidlrw].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{899EF800-9C9A-4325-AF40-C730B5DF3868}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='216'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[sum:PercentPopnInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1y9u5ca1o65ov610tbkbv10pwgpa].[sum:PercentPopnInfected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6558622A-9A39-4E44-9D35-A3E73F443E1E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14r1ltx0yreqx21e7luds109ejdy].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14r1ltx0yreqx21e7luds109ejdy].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAB6F177-C533-487B-9149-A60023854085}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0D1E21BB-6AF6-4D4F-A80B-E6A6C21D9C48}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.14r1ltx0yreqx21e7luds109ejdy].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DE588246-8290-438A-9629-4F02AA198689}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='58' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V5Qd13X3+TsVbo7dt2/nnJCJQAAkQZCiqEBFUrZsJUuyR14z3xqPnyY8
      +31mzZo1a30P4xmPP9kjiQq2ZEWKYs4gkYFGo3MON/XNuarOPFRHdAOkJFIkyO/fqxfQdeue
      ULX32eHsvY94ZWZVLtZU/it2QpSyHC+/SaPbAsC0BC9WhjEaO0EIQLzzxnJJ1MwKopRBMWpE
      PQaDTRJd3WhHrv+CJWEhpzPmOYIsZuk1phmKWNtHtqPpSh3emhfUTDCEStQrGWgwuV5qIt9x
      /J2Nr5yHch5hmZzwzxD2/h5zu8uhLdZULpT093scHzhYaRPn5EWGG03aAwY6kvTcPElPN1mt
      EWPgFELcmVCklFDK0jv2ax4NzuBxWHg9Ki4HkAWxTsyFisVU0sLvElxPeRnPeyn0RTgYe5Y3
      s0V6jxl4HYKlrMDvFITcW/1Or1jkVqGGylxO42LjIKf9y2Tq09z0HEa4PLcdn0gv40vc4JBz
      kjZnBsNSaApqKNWPEAO83wP4oEIJNPJy+1e5OfpLOoLwhZ4EWnaFx0NLLBS8/C7TDeGWt20n
      OPYMTzRPE3KDTfK7ievikiDoErwZ9zORcdIX1ZjOJ5iNnESRc/zHYolD7hivzDv59rEKW1JA
      sq9FYXZN0uyBw60Gv51b5PX+LyLcfoTTfdtxyUKas7mfcnKghMclEUIF1N9Hrn0ooH757/+X
      f1ipfzRVILm2gnD79/5QUZBGnWpNUsiX6XNnONAsafBAtWowu6ZgIpC+RjBqeCdeQs2uUg+1
      IYQCgBCCqu5jdeQm7X6J17Gx6tu/UgJIrq4ouHXJqPsenKpFq57nk6EZzEKOutPHbFbHKuQ4
      1CLpC8ttkkewVoJ0UXK2X0Eg6fJW6K+OM51zYjZ2IpTd71amlmmYeY5PDqYIeFhvb4P4P1os
      8NFkAClpHPstnyz+isWcRj3cufd9Tg+yuZdyTeJMzXKoWaIokpBHcti5hLk0yWLzfVDM8mj6
      Z3zCe5PEzAJpXyfCaase0unDmr/JkC9L0L2dAeRmNzUDXl70UnE28LddIxyOVAi5LYZDRY74
      ktTLVRYSdb58xLLNj3UilVLiUKGzQaAqAq9TEPEJGlwGN6aylNxNEIhsztnKr+GZfZ1Pq8/y
      6eE0PiebzCRQ+agRP3zEVCApLZSlMfzJMZ4IXabTX6el+Az/POem3n1s9xcqBdw3X6BarlJH
      IrGNUU0RhNyS+1oKvHHzdcTQSeZqYU57lvlm5wT/x42nyR34NPjCCFUle/Az/HN8mtCFSzwQ
      SXOqW3JxwSa+iBeurSpkhj9By+qbeHTbxk4WBKtZONQOn+7LE1A1qobEqW0RqRACTd2Ym2Qq
      CbmKoIKDUvN+ZNuQTdLFNA1TT3NfaJZIq0JXZKcU+SgS/gY+MgwgpYVv/EU+Zz1HT6tFqSaQ
      KDQ464RjE8TZgwFKOT7jvcpwe5V8FVJFSaNXQSCQmCRKOrQNgZQ0uCQgUIXgq9ERFuZmeT7y
      JarNwyjRLsTMBf6sL0VrQCClIOCG3856+Or+AteTLhwNST7fvoKmQLWuMLYqaQnYkkIIwQM9
      FnciVCEEDg0WS05GfPdSPvSJTSJXJ87xd6cWQajYkmdLDRP/lQE+IjBNHMlpftt4FvfCKmmC
      DOsrFHGTbDy893dCzZyLH8RI3+Sl2kECyZsMRSTDgSJRv4LfIdHX5jEbTnFDHeLe0iphj6Q9
      IHHqdV5LzVLxNSN8YawDD/Ha9Sme8GXJVySvLHpIllQmkwLpDSE0HVVIUkW4viRZLah0NFgg
      BYi9jeftsKTtVj3bWSG/Os2YUQfdCUCDkuN2BvhHmfjhI2IDSMsCRaXcepBq8zD5yDD1cAer
      WgtrwX5o6V/37e+EUFTyoT7GHfupVarkPK1MBI4zElcJmWv0NxhUk3Hmg0co+1oYmSsRlSka
      3JLVosYVOUC9VkcEo+D0kPD2MplSKBcKjGuDVPytLGkdWAfOguakPDXCaysBBhvqXEr58ImK
      rd8LgWlJlB1qy07UTfjFpJcXYo0s7/s8ir9hffKSjtQbHGqtrkuEW38/2vjQSwArm6Txxq9Z
      O/5l0F0o89fpSr1Fh7pGg6NMvKjxmuM7KKGmvRvQnRBuxvIEELoDRSiUO4e5eWmJQ00JTkdz
      vLV4lVr7YRzFBErQVln8Wg13uUC15+HNpkRDKyuhz7JS/RioGqrupGyZKIqKNGpcC/wPUMzy
      VH6VrshFTvUoaIqgZkh+elXwlT32tSwpyVfArcPHu0o8O1llwhPccc+c+yCpwmtE/P+V4G/F
      h54BgsuX+FrbJD+8/gvqmouvhS4Q7TTJVQXPL/gZC92PCDTu+p6UcsdGl3C6kcUswfHnKAU7
      mdP7qBhJlrOSijeM6vax1v8I4ws/Zizn4ZLvfqpdB1j3ddprrRAIRQG3b6sjVUOaBurCCBTW
      sLqPQDVLBwncuu1OXcgIXI6dnqMNjK3p/Di+j6BXpWQIyqceRPEGtm4QgkrPaX4wkeaUe4TD
      nQoVQ9Lg+3BL/XeKDz0D5HrP8NLEPAFRIFKdodVve3KcqqSi+in5WlAVZcd3pGXinD5PvXUY
      6Q1tXldzcT7pvkIydZkXWr/O/5ZtoOYJoXYMgxDIpm5eKz2G7vUSXjiHKzdOVQ+iCMnq8GcR
      Lu9m+wjFZjApcc5f4q/kz2hrk7wyfY7n2/6KZM3F/FqVjjC8POfgkb4ahgmaunMV7/YbeBZS
      pE58C+Hy7K3lKwprQ4/xzESI1y/Mcl90hVMDEilBEQIpJaWqxO1UUJU9GvgQ40NpA8haBUo5
      hNON0HRiwWHS0SP4c3McDqwBoKuwL5jnhbV2lGjXzgYsi+jM83QUx0iE9iFUe52Q3hA3zB5m
      wvciot3Ipm5EqGnTfhCaDg1t7B97km8PLHCiIc29/jjecoIRx0GEJwCVIuHrv8SZXqAS7kYo
      CkoxzUFrnEa3RVfA5KV5B5RzeGWFulSYzjk5213jxQlJZ1hBVXaS+WStgUzLMYR6+/cohEA2
      dlJpGqK0ssxwQ54b01UUAUtphX+ZHEapZOhssN42xOPDhA8Vv0vTREqJNvoSD039E3p8CsBe
      eR0uZvR+biQ0qgYsZBSeW42gdu3f1Y5QNdINw3TXphDJha0PFBXR0me7NdXbC8/pxtP8aL6L
      X8038cqSh9cLHdDQao+xlON+fYS/CbyEPn0ehKDWdoDX0q1IKRACIvkZEnUP52s9/HrKzaf7
      ymgKFOoKV5dhuypUNyVZRxNotx+PtCzMmevITAx1+jyrzWf4j4lWXsn08/2pAf49d4bavo8x
      kXBi7dayPtT4cKhA9SreyZfpqUxQkk6W4yUO789jrf6CVzzfRvjCdljC0AP8ckbFG1sh3XSE
      ekuzvSrvgUqkn3pW40D8WUYinQiH6x0NRQhBufcUNyoH7ZXUqIOqbXmZPAFmzRaOO+cIxhdI
      cT9CCJbd/fzs+jJfOGDwtYFVzqeCzGc0WgM1GjwWpbrE41L59VyAnFkl7DIp1BQuVLtYO/LI
      ZvjF3oOC4MyL5OSDWNUyluZgqu/LeJYuMVS5iC5XkYsXOXWwtM3T9NHAh4IBHLEJvup4mY6o
      hZRQaYXRtJs3XadgPdZHZuKIYBPFvvsoSlsvvuOr9oUZEQMMlUchNgud+97xeGQhg7zyHMrR
      j4MvvPNDy2Q8qfKfzXvI9T9shygU0hQCHczOuKkaORq98ClPhlobONa1mpoJM5Uwn+3NMZ+B
      sYyPqi9K6t6v3lEaAQihkD/7twjTIHxzlKH4kyTm3SzPJTnxkEZHVN1l9H9UcNczgMyvcXbt
      l3R2WPZGjwCvE0qmjtE5vKW/l3JYRh010r7T/S2l/fJvMYSFqhE7+jVW5m8gFQ3lHRCIlVoG
      zYFn+nXcAZVMOYelu8Dh3AqQ8wQwHv4WGU23+80lOTv5T3T7i7SfkLg0AAUhNsIe7FwBpwZ/
      eyiBIhQ6/OB1Znh6WSOVTYIiINR8x7EJ3Yln6iW+dWgRn0tBUfKIk86NT/faBvlI4K5mACkl
      0fmXuDdaAiSWtAPLXLrAa+XRl0aoDtyPa+48ulUj33xmz3ashZsoTR271SEhULoP3q7zzXs2
      YRp43/wxf70/RcQLE6lLvDUeJtZ8nHz/2a3AM01HFjOolQIPLX2PBzrzOLXtwWhb4c4gMC0L
      07LQNXs3tzlgf14plug6948o0Q5mj317z8jP7Si1HuWlqUkclQxnDjnwebYz/UeTA+5aI1ha
      FuL6izykXMHtMAF4dtrBKwtOpJT0NgoshxvyKdpjb9CXegNZLuxup15lMPEyTaO/QprGnv3I
      csFObtm4VinhuPxrrPkbWDPXsLJJpGUi/I1kShaVukRTYX9U8s19a3zReBbWlu22MjGs1DL3
      jH4X/Y0fMezP8/r0XsRnM7QpLQxL8twYFKs77/iz4RJPHDRo1vLISuntH1qwiUuBT3JRHGM6
      IZhbNVhImDvm9lHDXSsBrJUpvqy8yOFmm2hTRYWRfJj7oxmWsoLzuQhmdzv4G5k88A2EECje
      4K52lOUx7vMtcK7aT2IPQvCMv0R35hKjB78F/kZkpYjr/M9wlNfos+aYSWtok1UqDX3Ue0+g
      nXmC18Z/SM0sMRS1BYS0LBqv/5xwwMmQvsqK1Ui8omGWC+TKkCjAeMyiLQRXFiUP9KnE8pLZ
      NUnQLVkrgK6pjCxL9rdIAuvJNYoC6bLCrHv/5h7D26J1gIoF/74scFslGqvz/NVZE9dHNCnw
      7pMAUqIujtC+8CIHoubm5cW8gzV/D2GnxflkgIv7v4OoFDh08T+zf/Rf7ZCGWxXdxBwPZn5D
      f0SiG2Ww9pYAn+lMcmzsu8hiFlKLlPytdPiqPNGxyMMNS5zwx/gz5xsoK+Ogu5lsOrNjQymW
      g78eWObrHTO0ucrMTy6yIKOUw908NeUhURLMrAkuLML1uAOJ5PyyzquxMC8vh7i4rKNqKk+b
      9/Ivq/tJFu15XFpS+X7lQWLtp3fZMHeC0tBCSC3xtX2z/NUZY0eI9XZUDQvD/HBLh7tOAmhL
      I3yt/BN6ByzWE6p4blxB0Uy09gGeTdepOGzduWP+OT7XHSdRUBhbW0JJLWC1DoLmAEDm1hgI
      lFAEPNS4zPTSdWq9J3f0V247xH958xJKtUDI9TLucpLDyhRPux4iee4V/va+OroKKzkFXQkg
      G5oxQk38y/kU+5euEgmozGpt5FcSfL6vQKNX8t/cBzPp61zOhJg8+m0QCrF8EsvphTaD/332
      Ku1innzXCbL7HgRp8mwmgWhsIzlziUzpJlcSbt7Sj2EeevT39t4It4+ay49TBZdToVqXpPIW
      llSwAIeweONGjYqzgZLi53AwxkAbBF2gKB8uW+GuYgBpWViz11GbTUwLfjwR4pMdGZbLbuYd
      3RiNXcQMA6t1kK6bP6VfWeKZUfjkfsnnY9+nIyj52eUhVo5/A6GoiL6jfHcW/jL5U6oGVMMh
      hJTIasne9HK4oFLgZLRAb7DG72IzzDoGCLsm6UmPsmI4iOfrdIYFbQFJYGmKJPcgVBU5cIrr
      S2HE4AmEphMfeZbHzNfJlAU/vSqxPEFo6baT1r1haGjdFMf5tkFuwnoYNICKiLQjqyVEapEf
      uh+i0j6IKg2oluCdqj/bUBn+BD8YrfOVrhEMCf9xyU0ucoh9lbdIuvuJecKowUbqLfuYzyVx
      TE+zv3aRj++vE3B9eLxGd1kohMRKrZBK5hkpNzO5WscjKpi+CEsHvoR34RKtiy+RaTzAgeWn
      ONxs0R4SBN0K7SHwOQUeq8RE3osZbLEzqoophoxxOnx1rNUZlqxGjs3/hGhunLivH4JNTMfq
      XLk4T71YwjRNwlqJh9ryjKwIjrVZ+JxQqUverA5SjQ4iq2VktYxSyiCcHjsfQHPStHaD7pDB
      zRgkDC/FfY9CaI/EeiH2Ds/WdGTbEGZzP9I0CJ5/kmrHPQjH7ZPf74RKQy8XVwIsx01yppva
      wUeJ1/wUeh6AlgGsQLO9ULj9WI1dxGWUkekKjsoaLWHxodg3uKsYQAgB4VayzmYy3fdRjy2y
      LKKkOk7jzK3w5/yOC/px6q4QxvwE8XSVQlXQFbbTGAUCBwYzIzPkGwcRbh/a3BUGxTxdQYu5
      WJVgapxGpcCZphRXkz6MSC+mYWKklunwlAkpJfxOONhi0R6w84MdKhSq8JZ1gKpwglFDeAO4
      4mMohTWs5n5wB0jEs/SLJTRF8qm+Mrm5GZKhYbhN9QZZLqBNn8c0DCILr+OOjVKROtIbRmTj
      iHwao+MgQnf8Yc9TUSDUTKFpP2ZTL+guREPb7TfWfGFqTQNMja6iVzK0hMWuuKS7DXcVA4C9
      CopgBISC0tyN7L8XU3VybPHfEZbJjZ4v0TjyCz7XvoKuKjg0ha6GLUPOoVn0hg1GKs3UPFHM
      1gHGay105G5wtEMSdtZxapKITzKa9VNoPogSaISWfkQ6xploiiYfzKQk11egwSsIuqFuCiYS
      kqzlQVSLiGAEM7uG2dyP8AZBCMx8lhPKOMPNCh6HwCcqXBjLofhCyPWwCaE7kIUM6tR5Di78
      kq80XGOodI2PBRc55l5mcXKeQrGG1bEfo+vIOw7RuOMzFQKhOd7Ziq6oWK1DLKQ1iM3Q03L3
      0M5euKtsgO0Qmo5Yz3qSLg+Xwh+3X6AvzJoM8L2JFo5H8jzcXaJSl+QqgrDHThsMeySHp57B
      mXmOTE1nzmxBiVjoKrSHbCJYymkkGg4h6zWoVxGBRoqBdn5ON1UZoF5cQo1d49Eh2zm/moX0
      /DIudxGXMOiKPcOnunL8brGF66G/Ac1BtDxHILJVfCRfsWgvTxEZX6BYBeELMNX2cXpvPMlj
      gwbRJomqQKPXZKOMyjf3ZZhZe5YnL6YwTj7+fjx6hKZj9N/HhWsJzpqTqOrdKwXuWgbYDqE5
      MHpPAGDNXOPvu6/R6N1IIZS8PiN4Y8XDf3tvCcMElw5nuyu4Nbnu1chutWWH6JOqaBg+H5HR
      X9BWnePq4f9E/Z7H7HsAR/EpHj9YpcErAIWZjErW14EWbsKwapyNXiTsEXy2dZW5qVfI9z3I
      QPkGzm3+9sNtCoNNVZxaFUUBKfO8PPVdfFFBa2B3+qMQAl2F3gb4TOUyv0yfhsb29/TZ3hZC
      ENQriLtcBbr79gFuh3XDUfH4eDnVxs9ueplJwc24wlgxhFsXzGcU/p9LAX4zG+bfbvqpmRv1
      dQSGaRO+lHYAwmi5CekJ0G/NcSK8hkiv7OjOah0mU1EAiQA0TLw9A4iBE9znmadtXZL4nNCX
      vwJA0vDu8KsLAW4HbLjwhYCHBhSOd96ZqBQhyBAA/Y9Xf/4YxGgiXXlfh/BH40MhAbZDtPRx
      teE7EJthZeE1aibU+++lWizxo2oZf9MaM2aBJ3qncekgpcKVpI+pohe3LNHnK3K10MRE9EGE
      x8+V8McYLyeRTV07omVEqIm5pS7+Y75K0XKyoDVQ7zkOiUVKiQR0bK0tqlkF3cF04CiV+ots
      z0bcK6RoJzYYZuuGkRiM5QMgrb2/8ieC1XuSF2fneaQrddcW1P3QMQBgG4Yd+0i09COQSLOO
      nrvAQ/IcJ9oK6KrEpQtemdWYcOxjpeU01Y5GsEzerBSQPU12NhlQ7T5OZY9IUOH2MXPkW8xI
      yy6jWCmhOD3Q2se1xFl8M5c501bE58T21wOmN0yhBleWLI53CpwavDknqZtwdmBvYbyalUyl
      BA/0bo2hUpc4qUClAMHbJPP/CSBdPq63fonYzaf45sFFfK67jwnuXgZ4u6VTiE33oHP8Nf4+
      /Aweh1x32wkmE5IXAp+l3nfS9oJstONv2BUXeTvviHDY4cTSMu3VOBNDBCKYHQd4ddXJQmyR
      vsoYc1q3nZweHeb7b3VRqdRoDcXpCEp+tRjhWHMNyG9OazopWUhLTvfaG05X0z7u7y0ggGxZ
      YpgwP/Q44hap9L7AHWCt4RBzmWUOttx9YRPiybGE/KCXR5eWCbUKIhvHkZymsTRPr5znUuBh
      SkMPvW0cjKxXGRr5/zjjnyVd1ZgoNXCz83NYzX3vzvikhHIeeel3iNNftHMMRl9DDN6L2F4B
      wr4ZWA/Bzqwi+4/TdPlHdOtp1gomi7UgPiekCNHlzpNyd1LuOoZj8hxD6iKjgZPUXSFEa//b
      JsL8yWBaDNz8V75yT+qu8wjdFQxgLoxzZvmH9AardIUl7vXhLmfhPwrHiLWcQvrCqJllLKFD
      tGfLslyHrFeR8XlweRHhlt8reOztYMXm7OR4h2vP1ES5nhZ5Jz+7NE1A2pJLbLOKt99jWe/q
      uN8tWLkUh+e/z+PH6mh3mVfoA7KE3BlKpI1AymI4ulPEtgXhO96LnJu7xrV8A4+2pdAV+GXu
      IVKDH99BjEJ3ItoH35PxCV8IVqbsrKxQFLCJVYlN0Zi4StDMknZESXWdsaNSNQeYNVB1u5IE
      3LGiw2Y/H0Dil5aJNXONhbRCrSbR7jI74K5gAOHyMpnzcL+s7VL5HZrggZ46HekEXWFQFcHX
      iy/zz5MOioMPvWdjktUyYn4ENI19iZdwlFJcbngExRdCaA6UxCyPZ37I/uYqTk1Qqs3y4uQ4
      QlXJW07GjVZqhz4B2k7paxWzNrPuFb79AYQQCurQveRGq8Sy1+h1bRTfvTtwVzCAVcoz3fNZ
      RhM/3JEDsAFVEfQ22g9eIIh4LL5ivMAP5ryUu0/83v3JXApr/ga6IrEGTsItwWYyl+Te6e9T
      SSbJKQHi2TwHWuEvtBf4+UqYevthzNVZyvUqrmabGLxOeKwzjaIIilXJXLKbmnPr+CIrsUj7
      wosM60uU6wrTej/x4c9sRqQaM9cRuhO1rR8xdxWzdQgl2ISUlq05vQMJ8p5gff9FdbnJVe4e
      wt/AXcEAQgiUsdcYPrab+G93f1fA4FPxp/lppuv2dT+3Q0rql59HO3AfR0a/yxd6M1gSfjY+
      y+i+ryI2cgikxBWfYC2e5RvHAHKYUuJQLS4tKXY1Z7POEWOUkFtSqds5ymDH0ksJl+JO8j0n
      7GJVUuJZvMTni79if1cNRQiKNbi55gJVRZ98g/sKL/NAS45M2eKfLx/iifBNjMVnWBzTcQqD
      lBblRvtjyGjP+xKhKVxejP6TzMyPc8jM8X7x4juFlHKzSPwHT6ncC7qDE9EyiiKRe9TH3At1
      U5Iw3CjlLOrKuF0h+g6QSNSOQWQ2SVlxY1p2wdlQPQHbc4WNOh3VGbr8NebXJLoKLk1gWDCW
      0qkFWkGoVBQ3+1vljtAHgJopuSr2gT8CUqKkl3kk/zSHonVURWBJyQ9iQ2SjB2m58H0GZn/N
      2bYcbock6oemzCgOYXGk1eJzg1U+MWDylZ4Vzsb+DZFL/L5P9l2DcLqJd32BizMffJKS0qJs
      SqrmXcIAIj7HEX+CvYrDbkFBrE8nVRI8udDJeWOI+2I/5y+y30NZnbhzJ5USQ2M/pnf0x1gO
      Ly8seLCkZJGWzTr7UkpQNSb7v8hrHOGFSTavX076mex7HGv2OiAp1Pbu5kbSSaz1FEJRkNKi
      ZeIpTjUXNz+fTgnmmu7DN/oMPZUJHhmwsD2LAlUo9DY5eHolQqywM1bobEuO6NQztsv4fcJy
      WUER71//7xRCKLgVSSJTv0sYIJfA79xYwe8sAW4mVf55vAWvLPGdhtd4rDPN/qhEJhZhaRwr
      sbBJJHLmCtbqjO2bL2U5EC7y9X0Z/jw6SbFs8uqsRixyeLPciB6fou3KkyCh3Lofl8dmjGQR
      3kiGUQopQotvIvNpOmuzu8ZrWpIb1WbkRhJMLsUp99wOteVCNoKoV6jFlynWYTJhIYQFWCAs
      HuwqU9c9TOacSOyaRqYFTg0edE2irC3/sY/7D0ZA1ljMe8mUPtgbYhtVMFoa9A++DWCVC/Sk
      L+EI746J2YKCYcDzywFGCmH+vGeeroCxmb+aqQhEMc3n1Vdx6QqvLvWxOPBZgqlxDliTvFb6
      PKKpg5zpwqXXAXi4u8o/TnRRO3rAPtLOsggtX+CrTaP801yUFEGaPDYjaYrk883zzGRXeN6K
      oCAJ+1TAZCoBiZJC0GHicipMNZze3KEWqUUaPVtek2JVMuk7Qjg7xacO1FhOSw617XQGOTRJ
      k6vOVD1KNDnHhUILK0Tx5RZp8dYRxTQycptD/95r+IOMzPXSGr/OqZ4PrkGsKApSSuJJ84PP
      AELVaHGWcOsbDLDbzWaY8G8rnUx5DvK1wLN0Bw07vAEF05I8NenAV1ulo82gJQBDxij/54hC
      pvUoocQ1PpH9Bc/kHyAlvUiZQwiBzynxR8KsbRSbEoKSO4oUgi8qL7NaUDjdazNA2KMQ9Jh4
      nFUWkzEmM3GuKfs4ZV4hX1N4Vn2Aeush1GwMs/PQ+jQkvvQMbd1b8yjUBJY3jJXJcaBZMtQE
      qrKTAQQKTY4Kr3R9malqERH1cHT2h/Q0ZTmXa8dUdKjX/uAssT8YEirjF3FmFugeqiPRP9Dn
      j9kOCPHBV4H05VEOR8rbrtz6QBXWyoJxxwH2Fy/SGzTWCcY+1VFRLD7VV+J/PBajZb3wW6UO
      VjrGx2M/oicieKC9TIe5xJrejLGuabl1QcRKbapLQghKAw/yveQRol6LM90mjm3LhwAiXviL
      4yYU06y2nGQuo3G03eKANYEMtWD2HtvcoZblAg/oN9C3hQ40+2Eo8Sqlxn6en9YpVNlVrHYq
      AefifsyLT2Ol43ivP8VjrTGOtpr8d0PzfCn1PYYv/d/ISpE/KQRUvY34ayt4XBJ4fyNV3wna
      m5QPNgNIy6J77QJt3ureC4mEK0uC32YHMXvuYdpspVS/5QbsFXq7nu1zwjeGUjzSZ9Dml2gK
      aNTJGE5Maz1jS0CXnoZSbqs5TSfR9SDfXRzkYuzWUuIKqqJyaUlBtA1iCY1SxSSRh9HAyd1h
      DaZBZXcZIqqGpLyywMVUgPwOv7qgWrcD5XSrjj81QcfYz6nMTfKr64LRFduUOf5jr9kAACAA
      SURBVNqpcDqcwJq/uRUw+CeCqBbJFO2DNu4WfLBHWljDU0liWLcTowpT9SiTw3+JnpjiS6ER
      3Lq143OBunk6olyXCkKRtIWsTZpUFEGPXCJfV4kVlU0jqctTQiuu7ewy3ELy5Df4pftzzGe3
      hVqs91GrW8h6FaHqXF8R/HwqSLXt4O5w6noF/x5aiqoIGuoJvtyfZGRFrpdDVACBU1foCKu4
      SnGeOGTQGRY0+yUnugROTW5KLwXJQPxllPj02z/jdxOak8cfdK2fuKP8qfnvHSFfMphZrmKt
      r14fbAZw+bna/1V+tNxPurR9d8XewpBSMKX2ghD0ZS7SGza2nYQIYG0ebm3vH1hsVFu+Fd3+
      OiLazeW4c/NaW8CiafX8LteiUFSs7sP8onqSXMU2Xq8v2+f4pipO0JzI9Ap+h2RBaYd6dddq
      LOs1Qq7dakKvlkB6wwTckjP94FCV9f1t+6fBI/nykTpDzXCkA5p8kmdGLdpCdrokQG+D5Hg4
      i0wtIavlXX28Z3AH0DWBRJJImywk1gP82PK8vLt4G/viVqkrJdU6vDklODdqAPKDXRVCqBrC
      F2ItcoiRJYthZQGvA+yVXWBJeK3YTT06QG1hgkymzFrBoiNgk3umbJcssZniVmJTdpyb63VI
      ktOzfLyrjFu3k09URaCUMoy7Du4qPiWEQinUjTlxkRZ3jVdmVGYrQS6HP4Zo6uBs4uc81Fmg
      TaSYzjgwo307XoisVRjIXaTVt3NcrX7J5YSLq+kgAQq0B+2E+I2x+l0Cv8s+qjvggn3NCr0R
      idshURR7rq9OWTwz4yKYnSabKcHyBFJKlGDkXXs3e0FbuMqneuYRAn7+luDVG5K5pMCqVWmN
      3DniuFAsks3lAYFDf/voZEtKcrkcLpdz7xuEIJvN4dD1rarcQuBxCfZ1KLx4rYoi75KyKEJR
      qTV0Y05dYThcoVhTeH3Vx6vxILHhzyGcHmrth1jJGBSWF4lXXfxspoGllRL7m5V1Q3O7G3Un
      8QOoiuRQU22T+DdQqlpcE8Pg332SJKpGIl1hn5hn1HOUscPfhqYulOVxvLERjrXWifqhuTLP
      iOxFercdlpFf40DlKg0uk40IYiFAUST97gzXS000amW6AjU2VrqdY14/fVJI3A4FRazPTwrS
      JahUDYyaQX41xr3uBR4PjDC9WqMc6X/PwiVMw0LGZllOWtxQj1JvHqK1Nsfp/RoO7fYeoXrd
      oFQqEw6HUVWVbC5HtVqlWqtTLBRxOByspTPUDYN63SCfL+BwOCmVyzYj5HMIRSWbzVEoFnG6
      nKTX0lRrNTwez45yjlLaxRKiIZWRhQ+4BNgBoZAuWvRUp/ltfh/nB75FqusBxLaiUpY/QsnS
      qVoqZ4IrnOo0CXm2P3R7t3jvE9M3VKOt1VYiGc+4mGh55Lb1dwx/MxczYfI9pxEON1ZigZOz
      P+BApErEaxNlo1cyOV8g13p0azreIOM5HzdjFjNrCtWqQYvP9mC5NJNBf4b+YGV9F3hrbOsz
      3TZq+7NNl6MQaKogV7ZPgazUTD59QNDsh3Qyy5JnEOH+/UspvhMIf5gFz2FmHQeQa8u44mMU
      CibBIES84rZ1RQ3TwDQtLMskl8thWSaBQIBcLo+iKJQrdua9YRhIKQkGg7Y6U62gqhqGUcc0
      LVRVRVNVarUaLpcbkDidzh39CiGoVC2CXoX9XdoHfx9gA0IIKl3H+ZcFldrgsT3LAQZm3+DP
      3a/Q2WyuJ2Zsm/jbmjv2/bskg6ai1ktY7C6tDiDcXsTwqc2/FX8DzR6DfdENIrWlj6ua2fVd
      wxWkZgoWfINMpFJY9XHu7bJPugloJvquIe9UlyTb+9iab4MHPrVfMJeC/WVBxKfwi+uSsbUK
      0fovSNzzl+D2vSeSQLg8oDtQvV6KrZ8G3cVPnvtXnGdhX9f2Q0C24NB1CoUCUlpo6+Hhuqbh
      cOgIoeBwOCiVijidzvWjnOzvKYpKtVpFVVUURUFZP/ZKUVVKpdKOe7c/tTcnBSoGAbd19zAA
      2FGH9cEHbmv6VPwtWBWBesusSzVJ1YCwZ+9vbq2iu5nkeCTPlemnme/7DMp6sgvYRixmfVdd
      fllI0+gV62f6gs1UCl5RQdaqm3nEAMLj5yHXTfpCkpJbIehaH4eQ6G9Dm7uDAjekxNYxqj0R
      QQ/wwphFPCc50VonZqZJn/85taZ+lJ5Du1M2/1hIiR4bJySKJEpZpNtCdB3kRmycfV177w0I
      IWgIh7EsC0VR7RBvIBwKYVn2yu7e0PWFsM82BkKhIEj7WQixbekSApfTCcLe9b2lNxYzgpWV
      CqeGFdQv/93/9A/LZQtMw46Xcbjft1xTadQwLj+P0tL7B61Opr+JG3GVqWtTvDojmM/rvF7s
      5vn6Yc6r9zAWA0dljbCbPQ+E3ks1UoSkS08x/dY1CnV180xhc+QVKOZQGtt2fsHtZ/LiDYYD
      RbxO2FBd2jx1RsZi1DqObN3rcJNdXuW+cJKwW6Brv9/m0WoW/K7tKt3eUqxqwuF2hWtLJqpR
      J2Cs8fXWCRyL15l39L2rTCCRhGdf4NvDY5z0TRHOTzPb+ABpK0inOUvIv7e6LYSwV3DBDqN1
      g4A3ChdsfrbtmrLtsw1GUBSxaxOxbkhGpqvcXFL4xGEwLFD/7tPH/yH53JN0j/+Gj8d+gWP+
      GgkCWJ6QfbyntN1775XhZLvHpN2PouG5+Tz+wgLlpqHNPjdcaG83BiEEZqSLTNd95FsOEu95
      mKy3E0sK6t5GMqE+rtc6WBkdp6fBxKmtt7uHXSDZcpd6HHCirU6kPM980UXN1YBwuO319hbP
      iiyk+azxLH2NtoG6AacGVqXEZDUCAfs7QlEohPsYubFKLZfh2QmdlbTJYNT2+2/0v1aU6Kq6
      rsva1woV+L/e8lJVPHT47AOvhdjbvmn0Cq4umYzFJH92VHB/j8Spwo1VWFFbIBS98zGrvxck
      lYrJwsQyXs3gaLdJR2mU+ZU69Uyaoa73L/98atFgOWmRzhnk8wYzSRX1f/3G6X/oTb7BPa4E
      Ub3KoBJjOPEG+dlJSC0TmDmHyK9RC7ZApYSYvoyaT2B5w3+0pJCWhbJwHbEyAYtj0NyDHhvn
      tLjKlNmGCDYh61XMy89vukTfvlGJFp+ia+UVTsSf4kT5Tc46RtlfuETT6gU663MMNxi0BOQt
      efO37g/sXI0VBVp8JgO1CZZGJynoYdSewztdm1Ii82mOl88T9e/8ftWUPD3hompITF+TXdtU
      VRGag1LTIJPVRjJ1HUt14allyFYUdMUm6nxV8NKEJFdRSJQUNAX8TtgfNfhRfJirpVaGnTE8
      jltX/3WJIKAlIEgVJSe6VWbXBD+5DNPlAPtqNzCkSiXU+e4scol5Pmf8G81+ixcyByjly+xr
      qXGkpUhPi4rT8f7FBzUGVXrbVNqbFM7PCPb1rBvBUcfO09ea9Cp/wQVk7gJCQH5J483Yyzir
      WTplHIeQvLh4lpnjfwXed0CUe0DWa3jHX+BjxqvM512MBU5QG32NTzdMcqChzuWVEVJd+5GZ
      OI0rF0g7HBDtQhbSYNTA7Uc4Pbs3OyoFHlx4kkcGdxtAg00Aldvoz3v9fyeKVUmpavJgeJlf
      lmJs32KS6RhWfAGl7zBvLO9jyLqxQ81SBDgDfqpdR1ECDTsT9l1elJ5DIC2WPUd4cmUKK18n
      vJrAr5QxHT7ORKZ5c8VL0vJiqUcYiF+jz5FAbe4iXakxFoN72iU+562uUvtvVYEH+lXKNcmr
      U/azaKzlebS/zuW113mheGj3mcZ/AMTaIvuHVTwugX91kp/N9XFlRKAuXCcccvDNh/dWP/90
      EBiG5ECnwqOHVdT/+euf/AclMX7LTRsqh/2XU7HoY5UuNUNIq+NX6wzUZjEWp1hWGrHqVaiW
      7SrK2rZil9irvCxkMBfHbcJ1ujFvvE7nwrN8pfEKKwWN+WqA/cosg9YkJ9vKaApUixVmPAch
      MU9f/hoVzUutoZvT4//IveU3aExeJ1FSMcO3FIfVdFzJSfb5sneoXf/76dqmBa9Ma0ysafw6
      2Ues7qcY7kE22mHHslZhaPxH+LMzZPw95PzdJMcn8VDBpYGuwnJO4RXlJNXkKiAQgcYdK65Q
      NURjO0qgEcWqczL3IqebMiznFDJ1nfOzkuLZbyF1J8rCKDXD4or3NKrXD5kY4/VWWsxlWvxs
      LrDbpYEiBF6nvXlYN+z32xOWvDanMVpuotYy/M4P2rsD1LVFjnjnURVBc0DSrq5y2TyENzdH
      wFFnX6f6vtYOEkIQ9Cr0tdjxYbcwwJ22q3cOWhOSHhmjMjfG/Z5x9lcukxu9Qq7tmF3RYKPF
      TAJ59QXc8TF8CxcoWQ6+YDzNg20ZdF1hKgGf689yMFqlJ2ys67LQ7KoQX0oRX83waEucMcuu
      rvaIeoED0ToDgTLdtVkmE1DxNG3F2AtBytOJtnCdnuAeh97dJhRiO15ZcNPqMzZXKkXA6Krk
      QjKA3jXEmt5k59+unzoplyfpWH6Fz/TlWRwZZ21snOW8wo32z5CMpYmnqhxuMWkzllDyScT8
      CLlcGdHSt6faoVSLPKq+xXDE4HCkQoee4eqCiSlUxMC9mJ4QJelCGT6NeeUF1INnQEB8ZY0u
      b2k9eWhrT2PDXSoQaIogX5HE8pJsWSGel+TxYHQetiXqHwkZiHJ1okJ8Ps5Aq8W1eZX58GnK
      5Tpf2JciHNBusw/zp8N2Y3qdAcbudDsbwVhbf9u/ioAVw82RQRcdAZP9jRWWp5bIeDrB5UVW
      SjTOvsRp6zxfHs5QKdc545tmoMlEKgoBrc5AxNjziE5NhSFPiohMMxy1cJSSnFKu099g2p4C
      BEGHxX4xjXv2LYyVOXK+DruCg9PLnNrByHyVqTWVl7KdrKXydAVrqMqdiX86JfhJ6T4c2SWi
      PjtSVAio1CRNzjLZtTylnlOIpk7bcK+V8a5c57HILM1+uKe5xpWkF+PIJ6HnCNbMNT7RvobX
      AQ1ug1ZPnXMzkmK5jtbaiz57CbNxp/5tVkq0xt6iI2QHx4XcgpaAZHa5RD3YimgbQDR1gZQ4
      x17GaD9A++JL5EN9XFKPsN+awOOAnXbNln3Q5Be4dMGbsyYVqfNwV4ni6gr56IE/3gOoahj+
      FkR6iTfXupjofAIZbEbEZ2iyVgiFdTQB72f9rO1xSbdRgWA74W//2frMxnzdS0eHF4emoKuS
      e0Jp6gsTrFbdGKiYV1/gdFuJlgAMNEmCbguJwK/VNypq3BaaAq0BE02VdAZNGj3WtvslCDtx
      vSdU51gwgWtphJW0haG6sCSUDIVE/6OUuu5lJWNxn2tqR/z9diznFC7EvZwzD1Ic+hjTVivn
      FwQtJHCo4NCgPayQqDqJBfchMnGM535AW2mcJwJX6AxtuN4k6XydpebTCMC9fI02PWfvCgvw
      OARhr8qI7KNl5RzfiF5jNOOlFmzdYgLdydzoLMP+LD6nQBEKEa9Fs6vCuOzEauwCRaHxzX+F
      SBf1vnvJe9qwChm8+UWclTX8Dmuzgt7GXsStWMmplE2NC62fo9h1L8ITuPMLeYcQuoNS82Gq
      kcHNkjKu+E32BZOEfCpO9U97yJ6U1i5Ju3HtDuy+25+8ZTzu/HcjzBjs5/eJjhSH8j9hccXB
      VFhjJasytF7PR0qBLv6QZIndmWAb4xMIEHB/a5aD5adYjj/HSloSdksyU6/wUtMTdjTmtodg
      WHYubbGmsFx08BvlYXJNHbiNAicn/l+atAK/iT7G9+QA7nSW1uocMTNATXXa9XgWx1GHjrMa
      aecHy9c5kb7OIz1ldFVwprvOyMWfUhx8CF2Fy0kfQ9Hs5nibvSaueImImaDVZ/BY/Lf8W6oV
      Ip32OHNJQmoZdducLQm5MrjcBTby7deaDkGTnVImGttomPwdLk3yW/EgC1Pn+NrhDTN96/1s
      vNdYDgpVi9lEDb27iBqMvivEv/VyBA5hIS1JTULQVedQj+3B+lNA7qjobZef2XkNVtb23Ane
      vZmyk/BvJcTd14SA1oBFa6DC8VZ7w0as+7Wd6jupGrDl775lWjv6kZsxMFsIuCHgrrGvaWMO
      Gayp7/OC5xP8bKqBDm+FFStMOpWnrvvId5yg0tCGsxDnM8nv0xuoEOkQJCsqwcm3WHO1U773
      MWY0B9I0cE68apdY6T9mP0zLpBxo4pWFVlYuP01TxEMNjcI9n0dp7SXW1En/5D/tGKMlLfA3
      0KdNAdDlq+Bdm6YU6UQC3pnX+c7+BG7Hll//8iJUhJOqr3n9GQus9v1YV55Hu/+LACT3fRZ8
      IQJvPMl0xsmzUyYf662uOwN25lQPNQuWMpJUVSWdWcWcvIw6cPTd2++REiUbw5u4iVZLEtXS
      ILer0u8dpJRcmazS2qjT3GBvvJl2FXsKZYuZmMX1fCvTzkMbDHBr3Iy4xVjc22247ayT2w5G
      VaA9vL3Nt8N2Nevt77dXtr3utXubS4FqGaiaxujhv+GmEFjJZWgP2JtYtQrSrBOce4Oyx+S5
      XBijUuLxgzUO+5O8WGzcjOUXqkZ12C63KITAnB9FaRuAmav0pN7k/s4Kvy0OsuruRot2IYRC
      ZPkcZ9pym3YLQMgDzZMj9A0ZWBIuLSmYriJWfB6hCMK1GF7nzmc6m9a41PZp1LaDW0979hqi
      tX/zHj2zRNvcb1kIdiEb+3l99jIuNcbxdmObOrT1dD42JDjQavJPr10mm02jBBsh0r5ZBeOP
      hTl+jkHndRr8Ep9HRVX/dHnKDofCy9cNPn+fwKkLfn1ZQ5F1Jp33kIkcQkQjoGrbGWALcoeb
      8E5E+H6k/NxOMtx6XVA1JL9J9rIy9AW7OrPmBCRK+yBoGnIthnHzTUQwwnJgH/HFEZrdNY42
      1vDpJh/rLlG9eY23rodwVDJU7/uLHSuk0jkMRh0jvsCgL0VPROFQ+hr11TmyDgfB7DSPR0bw
      OHaOTVfhm4eyODWbEFe0NirDD6PPXETPxely5LgVR9okV26pPi26D20W17Vis3y59nP6Wytc
      Wp3ktyu9CN3BU65P41t7mnuatyTv5vsVgiY//PcPq/yX1+eJv/ADrGALjqFjiN4j/DGQSFxW
      Hk2xWMi1kJ7N4HLU6Wl576WAEIJoUOXn2iA/uriKQ7eY8J/BivaBy7sjRGKdAbYT/J1X3tuv
      4ntdF5ufSd5pwaTtas7bSYE7lUqBYhWk6kSbOofRdhCrUkA43IhSBsfCNfYzgeHwciUvkG4/
      jXqFv70ntyMm57MHDD4jnydbgZ9cs1htOIz0hvHPncNplci4WnE2NtDg1MibgoeH6kxcVgjn
      rvLXvRObY7RTM5VNyeraqHIhBU5h2N4TzUUocZMzx6u75tIRsoikl0jJg5tMILzrWf5SEolf
      pqupiqaCQ5WoquC4P8b5bJCb3i7ukTNboSWbY7KN0ZAbHj+i8OT5HI5sjvyVJCLYgBVu/4Pt
      AjU2xZB3FcOEY10JZlQD09LX1dbbv7M/FlJKaobktVk31db9zLZtnaS5V4972AC7Ce7tVZfd
      Buqdr78X2GK2zbBgr+Q/9d8kXRYspN+iaio4VROPDh19EpcGxVqeyFKap5e7KJTq1EyJfstT
      2SCSb7VcIVm8RiEu6O8wURVBoXqDUk0Q8UlMKaibkgWjgWZPlHJtArdjY2zbDPZtvnlFKJxu
      WGN89SaV7sP0pZ/F79qYyZYK6tYln9Pf4AcrPRht+3bN3imraIrNXGVTo3Ls87zucINQGJu5
      QKk+hWfTpti9sPRGBF86KojnJY3eNCM3n+Tq4NdQm/6wUyhFNkG9WOLgkM7NOYOBDo3eNgWJ
      heC9zT95fcbJxY6voawfo3sn3NHp+07rcNp+1XeT0P/Q9rbbLOsEJyQNHmjw7F2qw+eEoy1V
      cvlJLmccLGUFQ9G95+3QoC24sw2/E/xO2w+mCIu6hC4tydKcxZpD0OHYex7b3ZIdAYMHl5/i
      XGycNndlnTl2j6HdV6MhcYP4rQwgBAnfAFdWRtB0hVcdD6D4wpurtxntZ3pF4VDL9oSfW8cl
      2Neisq9FcnnBYmwuh6y8CPtO2oW2dOc7NpClUaddWeax+504dOhquVX3f+8WRcOUnM/3/P/s
      vflzHOeZ5/l538ys+8B9ESAAgvdNURR1H5Z8yGrZstU++nDPuD29E9MdGxMTG7E/bGxszJ/Q
      sRG7Ezt9eqbbdnfbbtuy1bZkWZIlS9RB8b4JkgAI4r7rrsz33R+ygLqBAghKJMUvAyCqKvPN
      N7Oe532f+0F2r0z8UIUBaiX82nAzYy1/rtaQUQYI8MpCEWs50alwp3BRH3CTyy3L4Ohghi3N
      5U3xKo1TmDm2OJ4p4YUt88wm5mha6pwol46q5AUVCPbWxaifO5nrs1Wuz6BhYNZgMthTcTbZ
      rj28tNDhKrDRpvz8tSY4eZF6P2SVRAOVq5bkr2krzf0bFOfHzzJ+ZBzlDeF96usQiKzwTPJj
      OYlYFaH41ok+Qggu3lDEmnbWXO2h7Li1EP/abqrSKlQ8k+WQcgymbS9zjsWcbZFwCnm5nIBE
      QfHcSmPv2QAWmaJShcvDta2XhlYIAc0h2NIiSjzcy49ZFxDsbtcFIdSC6zPw3lV3PpNxyT+l
      HsPp2lPxfGF5kA3tiJLQZj07zlOZ1+mIKJJKMO9InJLbd5TGKShytK9T8nCfwBCaSGaKHvsq
      kVO/WPmRLMKwGO74DD892cLM/OLzXOn7vnlorfnl6GZEa2/N5xTtAGte+dd8X+WrcelcllZZ
      7R6VUQZpbZBWboyCEJqQtPFJh6ySzNkeGq10USy+Wx6lWi6wi5APvrDdLmhkXS4ilCvdVVbr
      CndTybFYilha8M6QhYPF/pYUCynNeFxybtLgV+n9OLueWLL61IRUjG3DL7OvNQnCNUM7WjJh
      SyygwVRcnlD84rSmq0Hwwl4FuM6qiA/+4gnJtSlwtOTnlwdRsVlkDSHpQggsnaY7OEnAX2ph
      dKhUlGC1UGrR8Zqnj5dPmMQ3Pb4qX8YSA6yv2FMLyomn2hxijklGGdjarX4g0Et0pjWktCTr
      CNLaWIYZl79DgbsLXBhd7piSxntLvwXLE3mNu4qGc549TPU+xti5f0HPjjOsmzhyownr8edW
      Z59PLrD96o95oeUSluHOyyM0KdyVxBFga7eixLwI8GGqkY6hIRYSDltaDLympiMqmIorXr1g
      kOjajFlLPkYOobl+9m3R+HIlTlzCXz9d8b3zDm2Nkp4WwdSC4s3LQS6FD6ND5W1ul4N0J3dz
      xO/6iVa+rC75VysyyiBg2ITNDGEjQ9jI4hUq9zwFWW2Q0iYaQVDaudW/dD4uw6208mxrq5b9
      Vm3OK6/siyuezpmDNQ7TccWVqeIxwz7Bl4LHERNDXIoepN+/g6TwYex+DL3KjC2RXGCzGMJr
      Lt6zJKslXqGpMxyazCxozbUpzfYOA+PA07zm/yxTaQ+/69e0R9xWTskMWF4T45Gvrur6c8Fe
      bkwJ0O6PxERiIVmfaNBjVxyaQnBuSPPz/g5O9/0J6a4Dq/Zkf4KpCcUhDZWIa/FBRc00Pung
      lw6WUMQcq2i1F2jMXHyRsRRnVJnB9DoWbS0MEKxebqX8LIAzo/D9gU5eH44wn8zP6d9m+uhZ
      OEX47KuY0Uas+DR6avU1/3V9O697nmImkf+Kg4Yiamp8htuKVQrB1UnNsekoItJIpns/Z5Jt
      9DS4z+7Vc4rRec2sZ/UFtZzGjbw7XE/GViA0Sjs3bS3M2prx6SyzMQe/qXj1VJQfef6Qgd4v
      IXzBNYVxrHP2+/KOq0rRpMUiRGUUBnAmHBM7d75P2KSUgV/aBA2bhGOuMdDu40Gh+fHRTRCZ
      nOSfxReIj/+Wp9uneW+yjvG6Hfyx/hnv9HRz2RuCp/5kRblfOw7OwBlkuB7R0Aa2DWNX8Yxd
      5FpIUh9wEGgMUfgNCAwJD/ZC6toYA7PjiLZeOPAM5z76Lt0NmtGkyUB4D8aOyor3svD4uNr6
      DMeHfsqh3gyIQivY6glVa82rxxxOZrdihCKoDQaTvYfQVuCm9hNz/WT/SspjNQVxMVFD43pI
      NarIU1xZVMko6a78CEwcvNIhrQ1XLxAQNEsTYCoprrcGpUp78RzygXtLViMh2NuUwh55mbNx
      P784o+lv2Ir2m9SZmh2pIdri47x/4yGyWx+uurpprSExy+GZV9icXeDqYIikI9gdmaO7T2FK
      1wKmNExnDeothVkw1JYWQSKT4Wr/cWR7H7Ktl+v1e3np9HHq6izMfU+uqaSiEALd0sMHl7aw
      O3OKdNb1fvu9q1eAtdYk0hrHGya97fNQUKTsZr/VVe0AxXbvoilWmYoo+7vw5kXOPKnROUt5
      YWBbJZHItfenFFhSsWBb1JlpTKmo/ijW10FXOKtKpQrz61y5pUgXMaSryN/XkeK+jhSOEvzd
      jRhJBFJqDnU5QIqHUq/z/bOjDO94oXLGVibF/svf55nOOfyWZkfzLI5yK0l4zFzJEARZJXAQ
      zNmSBlMVRThsa4XukUsMnjuC3LQXDj3PyGAfY9eO3VSjDSEEU833c/HGGaK+LMPjDg/uNpeK
      +NaK8Rmb//ZOE+aOw0WVANcDH7sOkLed51+zlLJX6KovhyUVIcOmyUoTkA7RJeIvxM3YnBcT
      R1byT7g/1ZX5ap9V323PTHgZ3vAY/oXr1AcWGUkR9sEftZ7nwfN/hXe8vNGfziTpM8cJWO7c
      J2Oa0Xn46QnBu/3SjYfSGoXK6Ukau2QaPkvw5W1J7h/7Bc4v/wa1MI3cfACe/jbCH17mWawM
      LQQZbfD2Kc27FwyGxrLLPodKaIoaNNs3sAMV6rPeJFbFANXFpeXEnkWCKSxNXupEErmp5IK8
      aiBgQ+hc7Ev5LMuvXXlHuXnk76X6Z5WZxC2H5DJbPANv632o+g6kcnLijl5igoDX4Qudk2y/
      /kt0tjhQTviCHGU7FyYkp27Av1yo5x8mDzAV6uHVgSA/PKbIKoVPKupN9CbHQAAAIABJREFU
      m4hhYwinbE5tEcEL+wz2BMZRZ4+4le9WStmr6RFpzl1zuDRq8chug67W1S3/WmsuDGYIRELg
      ZFc+YZUwVy2P1URI1Y7RZZ+7srFZIB/Xdv3iFM1asZwVotp4yyvo1VAY+Zm/cn78yZjg+A1J
      S0jT77QxvsV14KQdV15flPlH5zVvXI/y1a3z+FKT2Md+g7H1/qXm38LycrX5IQZSe3AS44gH
      73NFJSlRkze4cO4Ib/af5ektbsGBfC5ueWiGELCrQ3Ls3FXkzChGrgrezUCEG7iqN/HsoWs8
      sM2pWiB3OczGICaCyKbOm55PKYp0gPKiShR9iWtBsfJXep1FglRLWkDp9Ytl69qvunoRSC+R
      RGXlfXXPQJeEmAsEjoKZhKYxKBiLS95qeQECUURDG8Ljp/7MS3yl8UMWUpqo331mF6d9nO18
      jomzb/LixmEOe97m52cv0n/gT/PiiQbdvBGjO9eAL8c8sqUL2byBt381iXFxmAd7jVx0KigF
      58dhc5PCW5Cn2BaBvuA81y4eRa5DcowwLcS2w7SZ/UudY1YDrRUP7fYyezzGB469Ok94DTCh
      iuVCF78nxNodZqVMUMwMi8RSyYpyM2JLJWKuLcan8PhSxV9ryGo3qMwjVI0SQk4Q0oK3+iXj
      cZPp9v3I7XshR2DazpLMCr5rP4tnfID/sukkb43U8XbrlxEdW5kMRPifExfYPXOM4baHwOvW
      8FE3+rFUGk78Ct3QgbPtkbytLUdw9t7P8svjb3JtfoQ/OZjGlAaGhJPjHv75Rge7xVW+tAe8
      pqA+ALPzGezYZaxUfBUBcNUhos30D/jpbcuuatfWWjM84ZDMKI4v9EFZodubR65loeH+LMne
      ix5LVSQGVpPNq7W/KVZ29QpiS15mzmO1q3il+a1FKV4Mniu3esWVyaztwdGr/zIMQ/P8HpsD
      XQ6pzY8sET+4K2XqwPM4Wx/CDjdzZDTMe/Wfw4m0gFaI5i6Suz7L+3v/M+lND+SI2+1RvGXw
      F9h9D7hdaCrA7NyKZ+9jbG1SZOxFQ4Tiua0ZfKlZjsud/NX7Xsbm3Z4CwuvH6t21VNHhpmF5
      OZrcyqUhu+ZFdLFmrBCaH79nkL3/hXVL1SyE6RK/QGsHZL58RN7urAt+542Za9kNKiqD6BLS
      LBfDVt4Jyo9bDJ6TonQXcP/OKjc0IKslAWljLWtKzZ9vawGCJd9DrdBacGNOYGu4rprBqL6V
      Zzc/yK9T+5DRJmQ6gXfoBOH5ASYjWxCLYk4OTmsf54LfgVB9ka+gtAKC0bmFN2YfZujUb3ly
      KwQsTcSr+eMdM/xsLMJww2P8Tf9FNsthHMuHue+pdRM3hBBktjzCe9em2dQxjGksT8huBQdF
      IqVJZQTm7kfIrHDOWiGXVvsKHtTiuJ1KK3QOVSihtJ5QtdVflxBo8W5RyznlcBDMORZZVT6G
      owVzjoeYY+JoQVItPtyVmToobbzCwSNqTfF0kczAT876+LvUFzjW/AUIVm64AYA3uOR8ig6+
      z7/T/8rzwWOVd1qtUHOTqOsX0ZnU0tvq+kWy5z/IN/iTBpntj3Mys5G/GtjOz/rrUCg66+CP
      ugfpZoTUQ3/Aya4vk/VG17/PsD/MUGQvY+V9Qqri2FXND2aeJL7x4PrOpQAmwm0bWhym4Cqm
      pShMp6u9ykPhuRSdV9sYa9MDDDQWilnbQgiIGhksqXA0zNkelBZEjAwe6VRgzOrJK5bURGWF
      Br8r4DcXJcO+XjzbHkRKo6a4FW1naZ4+RbpR8zOeQvTsWno/eOZXxNv3QH0bOyde58HwDc6e
      CnHW2MZ8YAMiEKI3fobMpUnGN3/WLQrg8WF95g+xpcGluQl+Mvwy+33XaY/A70XO8v2LAeZ3
      P4uTmEUvzMI6N9XLhNv5aCRMczSeazK+/DPQtkM2EMFYZre8WZR7gheV33KaACEQS0Foi7b9
      lVEaJpCPjCzUEYqtQ4X5sLVcoXTCQkDQsNEIkjm53W84KA02grCRwSud3OZVLiIVzntpzAIL
      Ru2yLFwaF7ynd2Pd9+SqxAphWlzqfo5+KVHNG/OJLuMDfCP0If845iUdjNIjR+htsOmpn+Xh
      5BEcJRicFuzZqEhkL/MPH44xfuCbCI8v3wyjZSMnGr7DiYlB/BP9POgcY8PUR8zFH4adjyJv
      QZMUEW7go5nHmHrlR3zj6SB+L1RiAndxkGztNPnd6Azrb/3Po0iTszWk1KJjp1gRBFDKQWmH
      xRBXtKCMflb0pFZDqdOq1PxaqilU4tBi2FqSzimrWggSyiSlDcKGjd9YyYJTXbFfrf5zbNSH
      2P4gsqFtVecBiLZNbiHewnBoX4ijU2EyrVvB4+eK3U7WcZm+PiBoDCkOdDpYhiDq03y94zKh
      N/47Ol5cbkWYFqK9j9Sez/H6tj/ndNtnUVdPIt/5Ebeiy7UQAto2kQ23IqWz7FPUWmE7Gu27
      OU/0SpDgJpwMpgP8Zq6da9koApOU40VoE6Hdch75djUKR2fROEhh5ryZMrdzLC+3F6JUPyhF
      ad7A4ui1QGvIKkHMMVHIpR3LQrnEL/MNnFcYqWxOxe+vPJ9rM5JLm19EtnbXNPdaIBraOLn1
      W9C8EWF5uWxtZnyhute5Oah5qnUcPXa1+pj+MOauR7DaewlnJ93m3rcAwutnqmEPRwespV5g
      4BL84utFXefiVIBsw/o9t0owp2wfr/ifZjDp46A8Rp9nnDOJMEfm63kgPENKSQ6FZ3OKrkZI
      V4BBuzsCCISWoPMG1FK6KJX1S51ihSJRJb2g0vvVoy9dDWXeyZkqCyS6emvxSy21NC27Fi3z
      WbnHtxQjMS92+4b1bzGVa9intabeShP1V3Le5bGjVTIw8g4Xzs+R9NQhQvWI5s6yeamWHmYP
      /QGySlvY9UC65xCvDfrwD75JX5NNPAWj04od3TLXQcYtZTiiW9bPFFsF5kn/bvypX/CCfZUF
      KTiTiPCrmVbidRu50dJF6Or7tHkydPkSFK3wAvf14kuxaEmpvrpWM4OudMxq35fCtdZkcuKP
      JRSeoqC5yjL/6lHNc+wibcMJuRP8N+9Mqgbnykn00AUSQXJN+Soj6NF8deMIc8kbHB02effG
      NrLNX6dcdxIQiKCVc8uaJQrTQm3cw69/9Spv9B0gaEFIJdhkX1hqqJ1MayZU47p7fkthCil4
      MHuaTm8CvJBwLN5daCLZ2Ibs3slCYoGXJ7I0xJI8ERmj2cy4bLAkkwqyNiQzmrmkoiUikahS
      R3JFrNaSVCs0bhFe39LYtSjrpdav2sIflpv/+WkfY12PLjmtbgWMnl2kLIXiR7CUU1EqWuZC
      IwTUBTR9jVneCewH5eD78F9I7v3iUliF1hr77LuY3TvX3QpUPHGT+FN/jvCHWADE5CA/fO8a
      Lx5KEwmYnB8xidVvvnXXz8H0zd2gyUqBFoxlfRgi18Np9Ao6HUP07mPy8BeZmLjO/Plf8mDm
      HLbw4ghBnUqQyGh+e2QCw5SM237+4PEggaJGaItm0zwqhUTUgur5COVwbM3s7ByWaRKJBtFa
      I6VAK/dsKQVK6SVPt1KCudkF6urD7rFCgCi9TiXZv/pcrqUb19xDbSUsOrqEYZIINDM2LmkN
      ObnZlcZeLc5Uo7UmlgJhJiGTJlPXBYV5Bo5N18g7DGrw7Hv8lswd3J1GBPIKrm7ayPUzLZy6
      co2xyQzjKR/OodCazCmrgbnJmGY84yOjTf4t2UdyxxOkNvqQg+eQD38l35kx0sgNj5+fyBfB
      H3Ld+FPXab78Boez5zmdbWQimeHUQJYHtrjblqPg+rQilVFsbZdFIRWr8wW4KJX7lzsvEU8R
      CQfx+kwSiSyJRALLtEin0wghiETCJBJJstkswWCQdDqNUopkIkMymcTn9xIMVksGqS1cwxZW
      UbjDekHNTqCTCxjtudAHw2IgHmIvMxXnWficVG4xsrCxfUHUtuLG4+b10zzdE+O10WOMJO9b
      /0ba1SAEPP5Nfn31JMy/j9G7Z3ln4TrBHFQNJFJRjnp3kH3qq9DchYmA7YfchneFB3dtLT67
      rpnJ7t38fG4C78gF9p3/Z6Lj83xkbOBgn8WlEZvpy6MMZ4PUBSK0rmIxXI7IV2YYt7KD0gql
      IJvJYlkWmXQGyzLxeDxks64zSylNIpUmGo0Qm18gk81iWB6ymSxUZYDlkN8l6ph3mweutxxr
      mMhGt2an1hr/0DEONuaJf7nEfykE7XXAwnwF7wlYoxfZslUzl5rkpevnYfPBqp7+9YaQEmPT
      PnT3LjCtW776A8iEFeZo3wtkn/4OIudsEUKUEX81CNNCNnaQ2f4oJ/Z/mwuinezwBB9ccbh4
      LUWjkWYsZXHsYopCt0NpiES5zLqWILZFaIIhP8lEmoV5t0uKVhqv14tlWZimiWEYOEpjWB68
      Pj9zcwsYpuuh1UpheTxlpthq16rst6CsAtt6QYbrEZ6cxpuYZ499htYV9eyCbDctCF89gl6Y
      LjpCpxKEZy6TcaCn3sE4/QYqUV6q/ZZCiFuu+BbC+Or/9Zf/9XrTdoTHd1OcLqSBatjASOdh
      UjcGSAyPcD3hY9L24iDpE3OM2AE6Gqpfo9wzINe8Cgih8fk8eL0GXq+Jx2fi9ZpYHgPTFGAa
      JM0QdUETnwcCfguv18DjNfH5TDyWLOK91SffCOZTmvNjBjoVc+Xddf5itVJETv2cr3X047Uq
      6SeVZiU4ck1yfTJLX/Yik+G+XEPDGOrDX/F82wBtEYEpocWbpH8hhN3Uvf5m3NsE4gcXJvTR
      xPp/MfLi+2w4/RNGUhaZrKJZxgiZDu3NFp8/6CspXbgcFotKqWW39lKs1cJUPXnHRUmrsZpG
      BPjLaweYu+/rq57PStCpOFtOfZfnO4eIeCsJNcucq+HtKwZvxfp4vPE6h9sTWEY+5OOjAcX7
      QwY3HvqPiKZyn8HdgFtinxNSorYd5mrXE7SLWUI+QVwGGEwHuDahuD4FtX9Rqw89WDxrLViJ
      +Bcci4SzGsXWHW+7uoS21z+qRfiCXNr7bX46uZOMXfszBTfWfv8Gmy82XuTRznhZtYauBkHE
      q/Gcfg29UKpg3x24ZQZqIQRG1xbiMoiTTuM13VCKGcfPR/1ZHGe5L6vUzKgqvL/GeVUYo/S9
      aiEaCWWSUgZy1cyl2dGQRI8PrPK86lCTN9xmfVojvH76257kyuwynrCCuRQi7IP9nZWdkc1h
      wVf3aw7Ii9jnP1ivqd9WuKVlUWR7H+NbPkODmSKmvehoC4FwiIbkFANTbhhFHispveujUa5k
      Vaoam6QhpQxMofGWlWJZGS1BB6ZHUEMX8F54C6auV82kqwVaKxDgjA+hsxl0qJ5Tk/5lxqwe
      rlHp2MVnYpluQSs1O35T871dcWt83YsQAtnWQ3isnomEB4UgHZtn1ONnfiBLd5Mn18JzESsp
      crf2Cyj1T5TCFMq1o6xhI1pIaR6Kv87OQJqGqOLKhJd3r/UyGtmF7t23asuHmptCNrYj61tc
      s6hpMaYbsdXMqgtP5VEeTySF4PEtmssfXmV4bgpRdwu9w58AbnlhLLlhCxf6niPoEejZMTKO
      4HisjvHJDK+fzpLMVCLq2uKD1kMkqhVZLVEIPHJ1mWCLaA7B5zcn2FjnEPJo9rak+LPuc/xv
      4R/Re/Z7kIrVPpjWCJUl+5vvoWNzkPPwuhWkKz2Tm9GHNO9dhf7hNHp2bE3j3M645QwghEBs
      2sd04xbShp+sGQDTZN4x6Zwf5vV3Z7k6rqp+Rysps6LCv7UwRmnaZqn9X6DdsuxrEH+AijWm
      pISQR/P11nO0X/xFWdGr5Qaz+08ihs6R7T+Bjs2iU3GCOp6r+7NeO6U7TmNYEPAJVCp+14lB
      H0tpROHxYRz6ImLDVoSdpj0IMRnkpel2uuUcJy6lKkaFVguhLjyq5Erc7K5QjeEsqTFrNt3W
      dp3Fa/kt+Er9Cbae/i7mlQ9d7/Fy5yqFFYrg1LXj2XEYGWlETg5yuGkSY6laXm3hGsvNcBHb
      WzXfflARPvsqzqWjtyRZ5pPCx1YbVHj9WHsfQwtBMDtL0jHwCMX78UZ8JdlBqzFhlh+ryafm
      rMImXjLO2irPre1aAM1BxTc3XuE78kccuPxd1Ow4amEGtTCDdorFLiEl8qEv43nmW4hQFDU/
      zd6xf2NbY6UdZDXKb3V01Wv+5ECM6NCHqPhcPtn+DsetVYJLICINZNq3MT1yAsvr4Ua6gVY5
      QszxonU++nK1Tqy8+2elHaN2LCbhrCeWs0AJBFJAW0TzbPAanSP/H/NZEykFk0kPg+ZGZnf9
      nuuxxw1B0VIgrhzjkcSbPNUziVm2nK3fSi0Wo4QnBpGv/jV28yaMQ8+6MTu3KG/g48At8QQv
      BzU7Qfadn+EL+LG7dmJ/+AoPt83y3G5d1TtciXBW7+kVS7+XO2+5cW+WIWrRZyqep+GjUR8/
      7fhzjHo3E8wZusCmc//EF7enaQo6LF9yszi3IeZYZLXbTspTQadRGpSWZZW3lXaTfCZjMJs0
      ODIWYci3BfnA791UGfVPEh8764pQHZ4nv46yPG7t+v4TdDbMLRsaUUgYa8slKA21Wz4P+Vah
      0n3UdJ6AsbiFjObLg4u6FnoaFM1BpwazbP5ajhaklIHWbpU7jydTdKTSAkcLZh0P9SKz1HoK
      3IQavwVd9dBV72DJGV4Z7GcquYCw1r90+ceBj79H2Pg1+t7/fxC//lv09Aj4w3w4ILAdOD8q
      yK4gWlby2q50vHuMLPgpV5Yr5SmvNBNgKQHfqSUFrsK8VyoOsIimgA2JhaXXMlzPO86eolnX
      ouwaQuMRClMqDKlRRXwomHcsZmwPWlNQMCwPlbvftJL4LHhoQwxz8ho6lVjx2rcjPnYGEL4Q
      QSNDuxpFhJswNvRxfcrhpyfgzYtu2fBSrBSWXKvCmie1RSYotJvnVefC4wsJq3gW7m+FYMb2
      MW1718wEtaA9kIa5cfeF1milcMLNZJZqdNWu7EbMLBEjiyE0dlGNU9fUW2dmqDMz+EV5ATBb
      S+Yct7BYd6OmJ5qm5/LPaH3/b7GvX7rjzKQf/w5Q18Jl/24StgHZFMaGrRib9vH+oEEiK3M7
      QGVb/PKozATVXWjFzFDsQ8j/VPItqNzqmFUSW7lh04sFuG4VYhmJHD6P2f8BOpvG6T+GDtQx
      t7zFtAJcfcAQGksoEiVzNoTGI90iAqUNSDRuN856M43PsBEIGgKar+1P8Yd9Q4THTt/UPX4S
      +PgZQBrE+x4mqSzU2AB4/TgPvYi5/ykcR/HeFU0yqzk3Uvn06gxRGMJQGl5R2fqyPIO5zFGp
      ZZLSgphjMWt7ULBUJzSjZFUT+Wr1C13yL+BRyIVJ2gZ+gx69grFxJyrSxHiikIBXtwNZQhFY
      ZZlHITSyQF+TErwmTMUF8dSdtfrDJ9QnWNa3kTnwHMaVD93yG6aFteU+Jqx2zozA3/5OcGWy
      XLRZWdRZXLUrvV8JhbFHeVGoUs/forxZqWi2UksjeIUDWmPjhkssh2IhqlSoqs6UG+scvtB+
      g6H9f+I6FL1+tD/C6dm6otFXxmKAgwahsXKhHbUwZ+nzL8rr1uQ82XcWE3xyjbJ79uL0HkCN
      XgNAhOvxPvYVkjKI34I6v8AuCZleJI7SL6FULi8l6GriUWkgRTVGWVSiSxVWITRaC7y5Bt5o
      TbJCrsBaI1BL57CrMUbXjTcRdgY9N4G+dopQDXnL5UxVu7m58PzlmKQpBI2NwTuN/j/JTvFg
      bD2E0dG39Fo2dyJbu7EMeGQzmEZ14i1/rzAEQJeQauXgulrzAPIobvETlDZpZZBRBlEzQ0Da
      pLVRYlkpn/da/Ql+C77ZdJyGS6+CEASn+9kVWF2Amqa8UUm1MJRqRL94vtYwOic5PWbxj5c3
      MGP74RYk/dxKfKIMUAohBNaBpxmcEQxNq1yxrcXVNy+L1yZP5/3Dxe8u6gQ3Y/N3x/VJRdTK
      YCORAgKGjcK1sxcfvbyps5Z55HUBzTPej+g6/QO+2nSOgGf197AcYdf6TEbnBf/tTDff9f97
      fuw8w2bfNL6Rsx9ngO664LbyYWvlUH/1TWY9Ef76/QxtviR9LRqPoXlii0RIwWJ2WG1fVH5X
      qBzaoHNsUpsIUnyWKwItFYTUEkPUnrlWidhqJcDtjSn66oawFos8VJjjWsatlfhjacEPJ3cz
      +eCLoBXbrr/KpmiSI5ltIG6rNXVF3FYMgJDMiSiPd87hKLgyrnn/KkT90NOo2dgglu2Tll/z
      i13/RZdAlOgLtcf9FBNI/ngTzbxtETUzSK3x12hZEQg3vEAZ+I3VBZfVmvRSK1FnbBia9zCZ
      tMjYGimg3ucQy5oETZtN9Vkm45KppOQdcZDJXc+A5cUcucjhyDDHY+2oQ8/DHRYXdFvNVgiB
      2nqYY5dSHMh+yLcf0VwaE3zvVIhfno3zYK9mbyfLxL0sskC10OnlkkVWs3cXm1l9hoPPcHsq
      NJaEFiwHrd24nIyWeKTCuIlw68JVfjlmXjwurx1pUjb8bGwr5+ofRbe3gWMjzr2DUG4RWwwT
      MXoFHW6EujCyvgUhDbRjs3H0t1hRN2EG5w247/O5dE15RwTJ3XYzlNEmYve9wBtHTJzL7/N4
      n01vk+DqQgv2wByGTLG7QxfRYKUtfjliWLT4lJZZqYWA8ter3EJqcYys49bgrAuIZWN1FAK3
      SSE3JT+vZGkqnefi58ksHB8PcW7jlxDRZshmQEpkcwdbb/ya4MBpLobuI7b1MURJqyK5MMFu
      eYWFNDzYNsebw2dJptKQmMO77QCqe99tX0rltmMAACENjEPP8vbpIGLgdzzaFaMzLvndTB8f
      DZ13O1pWXS2Lo2OK31cFxF2sCLqkq3J/rxRXU2hxKjw273SbTcC5YcW3HjHwVQm2FQLCRpax
      pGQqDS2hFS57kygV9UbnDX42tZ2x6HZ8Yxdo7n+ZqIwzpcKMbv4CF6N/RMPw+zRNnmDB34bY
      uLN4/qfeoKNL0xaBtO3Q2zDFhbFpunvg1PgEJ5p7P5b6njeD25IBAITlQe57indGN9J35SWe
      7Jjkxuh5LswF6UldYqsvX7JPa10D4eSDz0pFGJcwyo8tf126TFezNCkagYDh5zenW2lvNLEd
      2NdFrv794rxhYBp+fMZPsmkzdTLOZv8UX+ieWpVFpnimtXHQ2ILgH9KfJRnycTD2Ow43jROt
      V5gS5tPw309qEo98i8mGrzCZToBVXHIle+YIjxpnieT6aHhN6KyHznrNdBxOnzfQLdfBF7yt
      RaHbd2a4O4Fu38KF2UcY/uAVkBrZ0Eo23k+DmQax6IWshQFyYxbE/uiCFXuls1ws2oyqy9t5
      olXUmxm22POMDvlQCH441M6+TRaprKAuAH6vwd8fq0N378Pc9zhTloepgdPsn/8nmkMao4YA
      z0Jxpvj6laHRaA0/v76BNu8Fnm0doKFJkbbh/JikPQqnp0PENz3kLhVCgC9YMojGSM7SHbUJ
      VPDDmRKsxBRi/CJOaUHl2wy3NQOA+wXI+laeC1ykw4rx1tx1hh0/irwTo1TOXJ4IClftWlfY
      yjbzivMtYA4pwCMUG30JtIZu+hkY8BMWkp8ktjHX/QCqNYmx4xDEFhBaQdcu/t83t9PkTfMf
      tvRXJLCV5lBpLkt3ouH4iBdvdoE/3DYP0t39RmZhOO7jpZFWMp4wut1b3Hg7GVsqla4nr/O8
      7z28HsnQjMY0NLE0LCQ13Y1wfUaSwosYuoTqHUM2dy47z08Stz0DAIiWLgacejqtBS4mQmzy
      J0osQctZdyrhZpxg5Qy2ktXF/cPdbaKW4uWGL7Kw+6sYgQgym0Ge/S12uAWjczvMjGPsfIKk
      mmc6eY2ApzbzaK0i08C0wfERL7ui05waclfrHZ0Gvc3Q25xgx8wgP5vZzXTLxqVz1MIM9rUz
      WLsfca8Vbeal+ItgmGilMLIJHCeDc/V96q/MEw+20dYwRYsvxpnZYdQ9Brg5CMPkVHg/+9Ij
      PFI3zTb/zZbsLiWU1Wieaz93yvbzE3GYSVWHmpvEnBxi87VXmZ+YZPzgN9CWCY2t6BvXSE1M
      cTLjozOa79heTfRaLoan6LWGq1OCPU0LqKEJPKSIaQ9DgQ425hK6/KYi64DdfwLZ1oMMRhG+
      ANbm/RgTV5EzN7C3PYrs2V00tgH4p6+i6neh2vcQe+tv6IqYOM2bbmvn8B3BAADx+o3MXvdw
      f2g6L+/m2gSVwvUElPsD1hqDUzryyqhiftSap52jTI6eYXz+I/bYl2gzYsQCFqPn/pJXRr5A
      XWqc3YnTXE/5uESYiTZNc6QgAK9E5q913ot3/sgmmzePJXjIO41HavqTkChwXTSFNPf5rvHa
      hTiesXNkG3txUkmM7YfZdOUlhq1uso6DMMo9cen7XwCPD6EU8Yf+iGOpeYg0rGKeHz/uGAYw
      /CGuJv20W0lCphtwVT0grnZSLUdlb+9yx5eHUyxqr3klWyBosFI0kKLbswBMIHLm0XqZoU6P
      0TH7PcbsEGNECFia+sQsP/zQy5N7fTRHJRKNTzr4pI0hahN5isLJBSTSGk8qgSewqDSXzFzA
      /S3z9N/IcG2+k+js28Q33o/nyhGMuRH8qRnigRbEjofLr7WoLEsDmrtxKNfPbjfcMQwgos3s
      DMYIm3bed7v0cGt3ApUdp8kl5FfTI0rNnhXmVmZEzYdi5x1mBaRWwYcRcyz+jmeIbX0AENSN
      nKBJDjG55Yv888w0vrkkj/rOsrXFJqUM6s10kYOtWrh3ISNmHc2l6zZbzHyp84iR5eJElu1t
      HpSGyYTktYsWhzpT3M8VJpIWduJNrk4ZnJ2PILcfRmw+WPE5FF/69ib8RdwxDEA64cbcV8ES
      wVeIbFhe9NErNL1YS6hEIcp3qeIgbff672W6mG/pxurZjXP0FfYsHONx7wBnzvfz8sH/g7Qn
      wjuJDbQmf0nUL0kpg4DhFJk/F0OU42kYmlJovVjixE1+Hx1P0xBY/QIhAAAYu0lEQVSfoj6U
      l3marTTnpuf5ybmNxEMdDAR2Ylrnmbt8iT0bFI/3pplNCCYyzejtn0P07uZuwh3DAGJ+gnoz
      fRO2myrjCrGUyK21zukVMre7FF6teqzCcsF05TJ7ftxFqX7W8XIl4cfc0AfDF3h0+GfsDswi
      BWyw4hixKVRdiETLdi5d+C0P+GNuAJ103PkXzHM2ofno9AIb7ClAFHzBmoNmmkg4H6g3mAq4
      7WK9YY56DiG79rHj+st8btNlxpolF+fD/MNQOzeiu7EP7cb03tqu7Z8E7hgG8CSmKxZxgpLs
      qkLbddnqqMuOqYybDMypiGpaiSBsOHTVmUw1d9F95K95qm586dMZ5UdlMyAkvsl+9tbPUW+6
      RCyEIGNrpuIGSMnrl038cxM8HbyO17fMbqkF41kf/3N2O3LrA7DrEUx/mKb3/gdf6bvMbNrg
      pfSDJLY9gKxrWbrW3Yg7hgGaF66tgSar5QeXE2OxRanw//XccyqNJ5BoxgJuw+qW2ADkwgts
      LXjL3sKTgz/iVef38cWHaN/muB5i4OeDbZybCJCNtEFslnSgkefiP1y2grWtJD+K72Cw+wnE
      Ew9DMILIxfCno+28P9DPSf/9JPc+i7yNQxjWC3fEHWrHpjUxCKUeecrT+wpRpL4WEbguer/o
      nKJjKjPLWlDsqCqe74JjMde4GYRgNNQD9mUADDR/FDiGiea3Ny7Q1ZpdutcPrxscn2mgTsxR
      lxhgNtzBtsm32eGdqjoHpQVH0p1cefQvoLkLWbKqL+z4HK/d2IzY0LfEFHc77gwGmJ2gy7gZ
      55eoINMXjF/Fn1Ae7Vl1hgXG0JVj8Uvf8wqHYHKSpBCMNeyE8dfczwRYueP7shf48sYAg3OS
      uZTg6kKIyMIQnxcn6fbFYU5AhVappde7GtgCVTo+CmkgOrescK93F+4IBhCRRkadINvJr26r
      c2pVX8E/ftm2kBFzarAAcg3vQnNDZWe8v9DIll4/Lw13cMK6D2f0OlE1y6PGh3R7Fj3Fy+9S
      AkFKmcSiHZBJgjdwx5gqbyXuDAawPFyL7gB70H19UwpqBQ/xqghBYNsa05TYWQfDNEinMliW
      iWkapFJpfD5P2TXyZ4uyT3xS0TdzgpkTzTwV/13RtzJte/mtsQcZ6yDdtR/v3HX2Z49yiIuE
      PZkSt131+9AaxrM+IqOnmUhJrEde+Fg7st+uuCMYAGAmugk96S5atWZulWN9ZPqF+Rj1DVHm
      5hYwTQvTNAAHISRTUzM0NTXg9bqPtlr9n9K5Pyoucd9IP1EjS6EIEzVsnuEU52dmaYwfZ7++
      SpORdGsSrTDPiYwHhOR8poFZEeKsfwdZfz0iVM+yydWfItwxDNA2cQohc/I6AkTtyewuyr/w
      QgW40i5Q7iATrs2mwG/g83mZm5snHA6RSCSpq4sSjyfweqM5L3CBwl32d15n8Eq11ICv8J5M
      odnvn2EvUy77imKGqsYGjha8MtPGkG4gYYUxth3C2vMoUhrIXM7uPdxBDBDOToO3wLFUVXGt
      Bl3yPyv6BbR2sw4KLUNuSUHIpN14JCkF9fV1zM/Po7XGMCSZTHbVOb7L5jALqjbnrnS8W7vU
      ZLZpK86hr+FraC+5x3vEv4g75kmc2fvvGc0Gcq8E6HIT5vIoz/6SUiKlrLL6VxtbEY2ESacz
      ROsigCadThGNholGw9Q3RGloqKt4vVrmWKkqW+nOUXnVF0xmvUxmvRyL1ZFWBqJxA7Kx4651
      YtUCnc0sSyd3zA6gWroZSvlpC7mNGISQaNQadgIX1e3/Re9WNJQYpiASCeREHIGV69vlLvkK
      yyOhQtWIivMo2pnKnWTV0jYr7RhD2RCXEkEc08esVsz0PXrnrHC3CHpmFNHYUVSvSDs2Qhog
      xJ3DAFhexsKbEEzn3hCgi2vcrBZFcUAl4wjhEv/ygXIrXiH3f7n4VV0ZL40/KnxVfSWztWAw
      HaLByhD3hjmy8w+Q9a2rn/JdBtHclX+htdtbYWwA4fEjG1rvnAVCSIPT9/9H3kp1M2N7iNkW
      iwR2M+mNQoglOi3PoKosahSGOxf/lEKX/JR+VjtWusfXZls4Hw9wPhmlScShbdM9Oz+LC1k+
      +tYZvgzZNCLSAIZ15zAAQqAjzbzV+w3+x2Qf1zIBlnYBpVelD5SJP0UEXXjJSiJQ9XxiUcPj
      LJbvqzFHfi6a2hj84fAkESPLbNseflv3ODIQXvGcTxuEEJi9uzE37UX6Q26/5U96UquBMAzo
      3UtDNMAmb8y1jhSY85ZjgsVQZyheFUoOQmm1dKz7A5WItFx2X45Ia1mJq4lHy3ixC8ZNa4nS
      ApVOou9/robr3QPcQVagJQQijO96jgmVi4wTAimMEqItJ5qqRL/4eS5eSOZyAZbLNqtM9NXG
      rswcYkXRqcocC/4VotHMsDc4i+X1IHyBiuffQznuOAYQQpBu6mGGUOGbRf6BRSzHEKu4Ysn/
      1aHLVu3KhL888Vc7fnlRSAiwhIM9dBEVn1tx3HtwcccxAACRJl7d/r8wZIchZ71ZLnx3tWbS
      tTFMLaLQ0ozIiznLH1/d7l+MlCNZUD43w2t2soY53APcoQwghCDbe4Afdv0pC7bh2uMFS06t
      RYKvJPaUOplWuFKBErxax9ZKzqvaiL/w0OXMvZO2l6PpNvS2ByF9Zzat/iRw5/gBSiCEING2
      jcuXI/SwQERmkCvI+VAcP1PNh1DIQKVn18oE1Rls/U2TMcfgI7sTu7ELeeCZezrAKnDHMgCA
      aOzgpfav40vPsTN5nn3Zy3SYCwg0QtQm+lSL1lz8tOBqud8yd061dkiLTFLOLPkq1LUxQb6M
      SpW5a5iyvbzubOXiE/8Z457ja9W4oxkABOb2w2SBE/JZzp96jcdj73CIS7kQiWpnVVYqV/Yq
      1xrhthj1Xz0zaz1wxWngpU3/gXjTpnte3zXijtQBFiGEQESb3BY+pkVq0/28tu07XEuHl4g/
      q2TVtqVrySqrHJtTOY6nlvHWiqF0kFeaniO5/TFk04abGuvTjDt8B3AhQ3VorZGWF22Y/OyD
      bfR5FvD7TBwt0BNTHA66ntLS/mKrq7VZS+zOcv6DyuOsJsFnwTH5bbqXMzu/id13cP01Cq1R
      81OISOOnIor0rmAAyMn7uRS/zKEv8UjgJVrCGq0MRmf9nBluITY2R4eapdezQEA6RcyQcgzO
      J8MoJJZU7PDNY8mVCL4a1ra6r8QIWsNFu5mzB/4UZ+PuW6BOuxAe36eC+OEuYoBCZNu2c+Ly
      b/hsOEb/hOLHc/fTZE3wmQNDCFXP8aE0zuwCOPmQ5Zgy6dwcpSVqoBR8cHGK+9R1fMvU2KmO
      CnnH1Yh6FcyS0ZITjQ+T7dp1y4gfIZYaYXwacFcyAB4fpyKPcTD2MqmsJtl1H0ORJl4++c/8
      xc5L9LQESGV9ZLL5U4SAoFcgc9tCU6SJMyclO1JDBFbZw3c1UFqQURKdU5slGr9RmelmHS+j
      HYc+Navzx4G7kgGEECw0bOfYwFscaJnHO3WFdF0r8407GZ29SFudwGfJou6NpRagaFCyc28D
      x99J8ZAxuua5aO3G6ltL5gZ3xX9roZWkthjseJCULTBS86R9UUQmxe6Z93ksPEbMsdBC0Gim
      AbiR9qESMWrskX0PNeCuZAAAAiFOi53sso9wUH3Eu1NdpBs38d7VJr5cV7l6WikTRAIS1VDP
      +MwMjVaat1Pt0FCHPRvnEWt58SjmeHg71oLWmuueDXSYCYzkPBiSzwSHqJcZjqfamd/5nBub
      7jhu1pJWvHfjcS6dfpn5vsN4s3G+Ofx3tMoFYo6BZ+wizo7D6/64Pq0QP7gwoY8m7o76MM7o
      VWRz11JbTq013sFjvGi9yuXhDO/Y+wiQ5NubztNe556zUr8v29G8czaDc2OC+i2t7N9kkUhr
      3n57ksfMgaU6nYvWH6Xd6KRpx8c/BJ8ncfB5ZDDqxhdlkujEAnXv/RNpb4R0oBG7fSvmxm1l
      96K1WopvCnzwr/zx5D+S1YIrTjOvP/x/Ihs71u/BfYpxVzEASpFzAQOglQOZFMHRM3zT82+8
      OtHLVf9O+uzLfL3rAgHPygywiERaEfDm3SbHr9hE+i/Q6U0unak1HI01cNboYWL758hsfXBd
      yo/obJonf/4XPBwa43o6wN9Hv47x2Is3Pe493OGOsDJIWZwGmE7gnDtCYnYWryl4uvkaRjDM
      tU3P86PrW7kyUaEaRBWrTCHxA+zaaDIY7iTm5KXIM4korxgHGXr6v5DZ9vC61d7R81NklNvf
      uNFM06Sm0Wot1ql7KMXdxQAlEP4wcsNm9jsnaQwLNtRr7ou/BVrTv+X3eXmkh0R6bY/AMgUP
      HIhwJNMOuIru0Xgj6pEXkaHoet4GItJIzHRTHP2GYk/sJCRzxYK1Bn2PGdaKu5oBAGRLNye7
      v8ZPLjfx6knF5zuGaTr9Y9CayV1f4Z/6NzKbkPnEGV27V9jvEViRACnHwEATU+a6Ez+AsLyc
      7v09PorXA7CFcTw3LqDi89jn3iX12vfJnn//3q6wBtz1DACgmro5tfPPeG/rf+LfBtv4QssV
      PMOnwR9icMfX+MWFCI4S+XZDNTKBEHBwd5DfOD0cjTfQUud3OyTeinvY8QinAntwNKS1wLF8
      CK8f4fFhbr0f59oZdOJm+yd/+vCpYAAAYZiI+jZOND9LRhmEJ06jU3GElPjCQabjBouJYKvp
      MNkQNvjSZxrofqAHKwQ6nVz5xLXM3/IwfOAbvJLZxrTtwa7rQKfiyL79yHA9ngOfQc9P58o5
      3kOt+NQwwCKc+AIe6fBM8wBi/Cp4/Jzu+Tp/N/oAZ4cNN5BZS5QNILFt0Lpy1TjbdsUmKTWt
      DQbxut5bGkYgmrs41fMcbzU+jQiEkaE6iM2izr6FSidwpkdxrpy6Zde/G/GpYwARruc3Q43U
      B8G6dAQ1MYQIRknt+Awvze5haFqQTmaZmp5Da8HE+BSZjCKdcshmNbYtUEpg25BOZVEKUkmb
      WFKQSkq2G4kC38D6w9n1BAuP/TuExwdaI2ZHCc4MIoJRjLaN6Gya7KVjt24Cdxk+dQwgGzu4
      cf93+O7CMxxummDz4M/Rto0wLdJ7v8j3Y08xseD6A+KxBIZhkEqmSSRSzM0ukE5nmJqcRStN
      Op1mbjYGCCanEwQjTVz4xffo8N/CYIWi7tgCvWE78/52SKcQpscthgs4N/rRmfStm8ddgk8d
      AwAIX4Bk74O82/JVtvgnYdRtSicsD8ktj/G7+CHS2kcikcTj9aC0wlEOXq8XgcBRaqmuqNYa
      j8cilYXGDT1kM1nMddwBtFLohWm4ehx98X2cyx9hn38PlZhfKgzseeJFZFs3MtoMjk126EJO
      FNNoO7viNT7NuLs8wauFVqiBs4junUVlVfZlxzD6f8UTTZcI+EyElCSTSQQC03RbISnlVpEz
      pCSZTHF9zs9PBnroe+Bx+qM9ZNZDF50bp+XKK2wQI1yfEbQFUuzu0qQymlODBmfNPYjGdsyu
      HYhAKHdLDqTirj4weAFz8z5kXYsrMt1DGYzf/1//9/86kv2UxhcKgahrKQsvHsXPeNbHZvsc
      9SGFlBqPx8DjMTFNgZRgGG7smpAan89D2hEcq/8M481bcVaZD7NouSmch4rP4zn6UxqtONfo
      ZbrzYaZn0yRSGuXx88jmDD3mCNG5y4yePIXTuhnhC6LnphCBCNIfAsNEBsKudSgZQ1jepTip
      e3Dx6d4BqsAZuYZs7mDrhe/xtd5rmLn1obiIbq7aj9a5oriSH17ZwJmt36qp+Zy2M+jJYYLz
      AzQnB3CExbQKk9jzLMIwUYkF9PQIsqEdde5dVCaN6NyKDNYh/AGCN45TN3eZLXXzbK6b592x
      Ns6HHsJp6lmyRGmtUKMDYBhusSwni7n5AMLy3IrHdkfi3nJQAbJ1IyiHrCPKcojzWKwdRI4J
      FJ1ygrN2eik1sxq01rReeIlnImdoaVaEfQJHa355zsdR+5mllZtchWd54OmlmqWLSGx6lLkL
      fm6MXiUbj7O/ZZwHrZe4MBzkrexBRMc2MAz04FmMfU8hmzshk1lxbp82fCqV4JUgpETPTdLD
      4FJTuuIoUbcKRGGhWq0VB7tStF/+xcoXcGw22ANsblFEAq4YNTYnOOFsd2WrsvkY5VlgQmBu
      2Y+z+UF+t+HbHJ1pJ+h12N86z3/qeJ3tF/4eHZ/DOPQsKjYDCPB47sUNleDeDlAFItrE1fGt
      3Jc+S8ibL29YGi6d7yEgMKXixY7z/N/9x5B9B6oPPnmdbY2pordOjnixdzyOMKuLJ1oryGYR
      Hi/24AWMrq0YLV2ouUnOpDdx9voehGWh00lEdzuieSPqnR/TbV9kzt9Fj30VTzDEOWMH8Z7D
      EKr/1KdX3mOAKhCmxcCm5/luv5/HA2fY3ZZyzZ4lleQWwyeEkEgpiHpt9qU/4OR0G0SalvQB
      1zqTQMdm2Dfza3q7M0vjJNOauG0W9bGqCKVQM6MYrd1FSTQi0oCx94kiYtbKgXQcsf0hzP5h
      Hmu6SquZoatxhkeT7/KDN95lfvcXSXYfQucsYJ9GZrinBNcAMXqZJ+Z+wvb6GPUhjSnJ9xdb
      YgA3mM5xHBQmZ0ckx+2tXA3sIRwfpiE9TKdnhmQsyZNbMoT9rgI9F9f86/uaoeBO9KPfQKyy
      gbVOxmg8/zI+UzEZ2Uq6ax9CGujxa0TPvMR03IDEPFsbEzzcq7iRDGF4LK4m6wmmJjje8w2E
      NGk49QuEYTDZeT/07ltiBpWYRwYi6/1Ibxvc2wFqgG7bzOvBP+Wd8Ys0TQ7xROQim5syRf3F
      xJJSLDBw2Nep2ZY9z9TCOcKtgrBfuN3dNbxxOks8rdAaUimFL9yAs+kBjLV0b7e8qFADgdhl
      7KEL6LouRLQZGjcwv+UZDF8E7DSXEjFGr7xN7OBXER4/+EPo2QlEuB49N4ntDSEME+0JFAl5
      QoN2bHRsFhltuvmHeZvh3g6wGuQ8v9bYRXaOvsz+phm6m/NEu8gESqulbjOFeoNGMzShOHbN
      4XMHPWQdOHoqzrTZxonur2G0dFW87MrTUpDNgOlxfRuV+h4r5YpE/tX1DnNGriIb2lDToxjt
      vWua3+2MezvAapAjrmzbNk60buHE6BUazh1jv+cy+zrSBDwK03DNlY6CjNJIAZaRryvaWieo
      DwhGphUbGg20lsyYTcjmDTmHmEDPTyIiTTXL5EJIWMHTK6SEVRI/gGzrcf0RrRtXfe6dgHsM
      sAa4oo8BHVuY6djCa4l53hg6y+bkSXZHxxFa8UGsm2FrE/XOJI+GLrKvLclsDN48m0UKTUNa
      4mjN5SmTkfYmgpfexMlkkB4//uQ42jBJ+ppJdt2H8Po/0XsVjR2QzbqVT29Rws8nhXsi0DpC
      K8ftTK4UNG1Yii/Sk9d5ZvoH6PgMuzZZRAJuNxut4cjZLAaanZ0SJ1fGOhpwrUujc/CDC+3M
      7//qJ17+3Bk8hwjVIRvaP9F5rDfuOcLWEUIayMYNiOauouA60dTJay3f4tRkhEUHGhpGpxVz
      McXhLZKwH+qCgrqg+9l7lx3O3XDYER7BGDyJzn6yoc2yaxuiru0TncOtwD0R6ONCtIXJh/6M
      Hw39mt2cI+xTDI7ZNNUJXjlus6lV0t0s6B9VXB5VdHX72LPRIpMVHL9skvmkbfRK4wyexezZ
      VZyTcIfjHgN8XBACHWpgeNuLDKdTMDmEx3uZfdkztDRnePNChh1zCuWzePJRD36va2I9fcUh
      s2EvwvSgHQec7CcT2qwchOV1/5yfRoTvDi/yPQb4mCGkAf4gdG0n27WdD9Sz6KkRROdl2rK/
      5XN7PEvhQBqIxR10i+EaUqUE6V3TdbVyIJtBeP2oZAzhDeTmU5sUrBLz4A+5ljAnC8pZ2XN9
      B+CeDvAJQ0jDjdTc9RjnGz7L2JwkrQyUdr0HM3Z4KYZ/pW731aCzaeo/+hfajvw1OjGP0f8B
      OjmPM3w5f4xy0JlcuIedRTt2wQAa/f+3dy69DERRAP7u3DHVjsdUU+KRtKQUlSaWFuzsLPxB
      e3/AnrBhQSIsqIRIIx1REW1NO497LUZiW5Iije8fnJNzTk7Osxb3AwBEeqJv9gr6Q4o+QBiS
      Vn6N3VvFZuOQzJhJNhnwlhwH62tRPz7E24b6A3RaLD0e4LtVKoVtxOszafcMFT3RtGcIowDk
      AGiFDv04zdEKoigue34Yupwrg9+Oj/YO2j3QwO/w7wB/jFZujePDU+aNe66kQf3FhNkwNtIu
      0Fpj351QdPcpWi5DwuPGS2CXMtRrl2yMHDG/7iPENU2vws5VB3+qBO0mYtBGtV4xnCzB8R7C
      dmA4g1YR0kogQh+RX+mtAn4Yc8bq3feTf76DJrO0QsmexDQ0C57kQjyhUl2WIFXEbLJGoZxH
      6RztQDGuh3Eci9WUZLnwOW7hOLAlQhreOY4dEugBqullMJuI6VFyYz6RdrlPLCI7DZIGvDkS
      6J9F+3cVUjAzQTmHXAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
